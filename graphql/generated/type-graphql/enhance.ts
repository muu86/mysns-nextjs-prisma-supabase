import { ClassType } from 'type-graphql';
import * as tslib from 'tslib';
import * as crudResolvers from './resolvers/crud/resolvers-crud.index';
import * as argsTypes from './resolvers/crud/args.index';
import * as actionResolvers from './resolvers/crud/resolvers-actions.index';
import * as relationResolvers from './resolvers/relations/resolvers.index';
import * as models from './models';
import * as outputTypes from './resolvers/outputs';
import * as inputTypes from './resolvers/inputs';

export type MethodDecoratorOverrideFn = (decorators: MethodDecorator[]) => MethodDecorator[];

const crudResolversMap = {
  User: crudResolvers.UserCrudResolver,
  UserFile: crudResolvers.UserFileCrudResolver,
  UserAddress: crudResolvers.UserAddressCrudResolver,
  Post: crudResolvers.PostCrudResolver,
  Comment: crudResolvers.CommentCrudResolver,
  PostFile: crudResolvers.PostFileCrudResolver,
  File: crudResolvers.FileCrudResolver,
  Address: crudResolvers.AddressCrudResolver,
  Chat: crudResolvers.ChatCrudResolver,
  ChatUser: crudResolvers.ChatUserCrudResolver,
  ChatMessage: crudResolvers.ChatMessageCrudResolver,
  Account: crudResolvers.AccountCrudResolver,
  Session: crudResolvers.SessionCrudResolver,
  VerificationToken: crudResolvers.VerificationTokenCrudResolver,
  Spatial_ref_sys: crudResolvers.Spatial_ref_sysCrudResolver,
};
const actionResolversMap = {
  User: {
    aggregateUser: actionResolvers.AggregateUserResolver,
    createManyUser: actionResolvers.CreateManyUserResolver,
    createOneUser: actionResolvers.CreateOneUserResolver,
    deleteManyUser: actionResolvers.DeleteManyUserResolver,
    deleteOneUser: actionResolvers.DeleteOneUserResolver,
    findFirstUser: actionResolvers.FindFirstUserResolver,
    findFirstUserOrThrow: actionResolvers.FindFirstUserOrThrowResolver,
    users: actionResolvers.FindManyUserResolver,
    user: actionResolvers.FindUniqueUserResolver,
    getUser: actionResolvers.FindUniqueUserOrThrowResolver,
    groupByUser: actionResolvers.GroupByUserResolver,
    updateManyUser: actionResolvers.UpdateManyUserResolver,
    updateOneUser: actionResolvers.UpdateOneUserResolver,
    upsertOneUser: actionResolvers.UpsertOneUserResolver,
  },
  UserFile: {
    aggregateUserFile: actionResolvers.AggregateUserFileResolver,
    createManyUserFile: actionResolvers.CreateManyUserFileResolver,
    createOneUserFile: actionResolvers.CreateOneUserFileResolver,
    deleteManyUserFile: actionResolvers.DeleteManyUserFileResolver,
    deleteOneUserFile: actionResolvers.DeleteOneUserFileResolver,
    findFirstUserFile: actionResolvers.FindFirstUserFileResolver,
    findFirstUserFileOrThrow: actionResolvers.FindFirstUserFileOrThrowResolver,
    userFiles: actionResolvers.FindManyUserFileResolver,
    userFile: actionResolvers.FindUniqueUserFileResolver,
    getUserFile: actionResolvers.FindUniqueUserFileOrThrowResolver,
    groupByUserFile: actionResolvers.GroupByUserFileResolver,
    updateManyUserFile: actionResolvers.UpdateManyUserFileResolver,
    updateOneUserFile: actionResolvers.UpdateOneUserFileResolver,
    upsertOneUserFile: actionResolvers.UpsertOneUserFileResolver,
  },
  UserAddress: {
    aggregateUserAddress: actionResolvers.AggregateUserAddressResolver,
    createManyUserAddress: actionResolvers.CreateManyUserAddressResolver,
    createOneUserAddress: actionResolvers.CreateOneUserAddressResolver,
    deleteManyUserAddress: actionResolvers.DeleteManyUserAddressResolver,
    deleteOneUserAddress: actionResolvers.DeleteOneUserAddressResolver,
    findFirstUserAddress: actionResolvers.FindFirstUserAddressResolver,
    findFirstUserAddressOrThrow: actionResolvers.FindFirstUserAddressOrThrowResolver,
    userAddresses: actionResolvers.FindManyUserAddressResolver,
    userAddress: actionResolvers.FindUniqueUserAddressResolver,
    getUserAddress: actionResolvers.FindUniqueUserAddressOrThrowResolver,
    groupByUserAddress: actionResolvers.GroupByUserAddressResolver,
    updateManyUserAddress: actionResolvers.UpdateManyUserAddressResolver,
    updateOneUserAddress: actionResolvers.UpdateOneUserAddressResolver,
    upsertOneUserAddress: actionResolvers.UpsertOneUserAddressResolver,
  },
  Post: {
    aggregatePost: actionResolvers.AggregatePostResolver,
    createManyPost: actionResolvers.CreateManyPostResolver,
    createOnePost: actionResolvers.CreateOnePostResolver,
    deleteManyPost: actionResolvers.DeleteManyPostResolver,
    deleteOnePost: actionResolvers.DeleteOnePostResolver,
    findFirstPost: actionResolvers.FindFirstPostResolver,
    findFirstPostOrThrow: actionResolvers.FindFirstPostOrThrowResolver,
    posts: actionResolvers.FindManyPostResolver,
    post: actionResolvers.FindUniquePostResolver,
    getPost: actionResolvers.FindUniquePostOrThrowResolver,
    groupByPost: actionResolvers.GroupByPostResolver,
    updateManyPost: actionResolvers.UpdateManyPostResolver,
    updateOnePost: actionResolvers.UpdateOnePostResolver,
    upsertOnePost: actionResolvers.UpsertOnePostResolver,
  },
  Comment: {
    aggregateComment: actionResolvers.AggregateCommentResolver,
    createManyComment: actionResolvers.CreateManyCommentResolver,
    createOneComment: actionResolvers.CreateOneCommentResolver,
    deleteManyComment: actionResolvers.DeleteManyCommentResolver,
    deleteOneComment: actionResolvers.DeleteOneCommentResolver,
    findFirstComment: actionResolvers.FindFirstCommentResolver,
    findFirstCommentOrThrow: actionResolvers.FindFirstCommentOrThrowResolver,
    comments: actionResolvers.FindManyCommentResolver,
    comment: actionResolvers.FindUniqueCommentResolver,
    getComment: actionResolvers.FindUniqueCommentOrThrowResolver,
    groupByComment: actionResolvers.GroupByCommentResolver,
    updateManyComment: actionResolvers.UpdateManyCommentResolver,
    updateOneComment: actionResolvers.UpdateOneCommentResolver,
    upsertOneComment: actionResolvers.UpsertOneCommentResolver,
  },
  PostFile: {
    aggregatePostFile: actionResolvers.AggregatePostFileResolver,
    createManyPostFile: actionResolvers.CreateManyPostFileResolver,
    createOnePostFile: actionResolvers.CreateOnePostFileResolver,
    deleteManyPostFile: actionResolvers.DeleteManyPostFileResolver,
    deleteOnePostFile: actionResolvers.DeleteOnePostFileResolver,
    findFirstPostFile: actionResolvers.FindFirstPostFileResolver,
    findFirstPostFileOrThrow: actionResolvers.FindFirstPostFileOrThrowResolver,
    postFiles: actionResolvers.FindManyPostFileResolver,
    postFile: actionResolvers.FindUniquePostFileResolver,
    getPostFile: actionResolvers.FindUniquePostFileOrThrowResolver,
    groupByPostFile: actionResolvers.GroupByPostFileResolver,
    updateManyPostFile: actionResolvers.UpdateManyPostFileResolver,
    updateOnePostFile: actionResolvers.UpdateOnePostFileResolver,
    upsertOnePostFile: actionResolvers.UpsertOnePostFileResolver,
  },
  File: {
    aggregateFile: actionResolvers.AggregateFileResolver,
    createManyFile: actionResolvers.CreateManyFileResolver,
    createOneFile: actionResolvers.CreateOneFileResolver,
    deleteManyFile: actionResolvers.DeleteManyFileResolver,
    deleteOneFile: actionResolvers.DeleteOneFileResolver,
    findFirstFile: actionResolvers.FindFirstFileResolver,
    findFirstFileOrThrow: actionResolvers.FindFirstFileOrThrowResolver,
    files: actionResolvers.FindManyFileResolver,
    file: actionResolvers.FindUniqueFileResolver,
    getFile: actionResolvers.FindUniqueFileOrThrowResolver,
    groupByFile: actionResolvers.GroupByFileResolver,
    updateManyFile: actionResolvers.UpdateManyFileResolver,
    updateOneFile: actionResolvers.UpdateOneFileResolver,
    upsertOneFile: actionResolvers.UpsertOneFileResolver,
  },
  Address: {
    aggregateAddress: actionResolvers.AggregateAddressResolver,
    deleteManyAddress: actionResolvers.DeleteManyAddressResolver,
    deleteOneAddress: actionResolvers.DeleteOneAddressResolver,
    findFirstAddress: actionResolvers.FindFirstAddressResolver,
    findFirstAddressOrThrow: actionResolvers.FindFirstAddressOrThrowResolver,
    addresses: actionResolvers.FindManyAddressResolver,
    address: actionResolvers.FindUniqueAddressResolver,
    getAddress: actionResolvers.FindUniqueAddressOrThrowResolver,
    groupByAddress: actionResolvers.GroupByAddressResolver,
    updateManyAddress: actionResolvers.UpdateManyAddressResolver,
    updateOneAddress: actionResolvers.UpdateOneAddressResolver,
  },
  Chat: {
    aggregateChat: actionResolvers.AggregateChatResolver,
    createManyChat: actionResolvers.CreateManyChatResolver,
    createOneChat: actionResolvers.CreateOneChatResolver,
    deleteManyChat: actionResolvers.DeleteManyChatResolver,
    deleteOneChat: actionResolvers.DeleteOneChatResolver,
    findFirstChat: actionResolvers.FindFirstChatResolver,
    findFirstChatOrThrow: actionResolvers.FindFirstChatOrThrowResolver,
    chats: actionResolvers.FindManyChatResolver,
    chat: actionResolvers.FindUniqueChatResolver,
    getChat: actionResolvers.FindUniqueChatOrThrowResolver,
    groupByChat: actionResolvers.GroupByChatResolver,
    updateManyChat: actionResolvers.UpdateManyChatResolver,
    updateOneChat: actionResolvers.UpdateOneChatResolver,
    upsertOneChat: actionResolvers.UpsertOneChatResolver,
  },
  ChatUser: {
    aggregateChatUser: actionResolvers.AggregateChatUserResolver,
    createManyChatUser: actionResolvers.CreateManyChatUserResolver,
    createOneChatUser: actionResolvers.CreateOneChatUserResolver,
    deleteManyChatUser: actionResolvers.DeleteManyChatUserResolver,
    deleteOneChatUser: actionResolvers.DeleteOneChatUserResolver,
    findFirstChatUser: actionResolvers.FindFirstChatUserResolver,
    findFirstChatUserOrThrow: actionResolvers.FindFirstChatUserOrThrowResolver,
    chatUsers: actionResolvers.FindManyChatUserResolver,
    chatUser: actionResolvers.FindUniqueChatUserResolver,
    getChatUser: actionResolvers.FindUniqueChatUserOrThrowResolver,
    groupByChatUser: actionResolvers.GroupByChatUserResolver,
    updateManyChatUser: actionResolvers.UpdateManyChatUserResolver,
    updateOneChatUser: actionResolvers.UpdateOneChatUserResolver,
    upsertOneChatUser: actionResolvers.UpsertOneChatUserResolver,
  },
  ChatMessage: {
    aggregateChatMessage: actionResolvers.AggregateChatMessageResolver,
    createManyChatMessage: actionResolvers.CreateManyChatMessageResolver,
    createOneChatMessage: actionResolvers.CreateOneChatMessageResolver,
    deleteManyChatMessage: actionResolvers.DeleteManyChatMessageResolver,
    deleteOneChatMessage: actionResolvers.DeleteOneChatMessageResolver,
    findFirstChatMessage: actionResolvers.FindFirstChatMessageResolver,
    findFirstChatMessageOrThrow: actionResolvers.FindFirstChatMessageOrThrowResolver,
    chatMessages: actionResolvers.FindManyChatMessageResolver,
    chatMessage: actionResolvers.FindUniqueChatMessageResolver,
    getChatMessage: actionResolvers.FindUniqueChatMessageOrThrowResolver,
    groupByChatMessage: actionResolvers.GroupByChatMessageResolver,
    updateManyChatMessage: actionResolvers.UpdateManyChatMessageResolver,
    updateOneChatMessage: actionResolvers.UpdateOneChatMessageResolver,
    upsertOneChatMessage: actionResolvers.UpsertOneChatMessageResolver,
  },
  Account: {
    aggregateAccount: actionResolvers.AggregateAccountResolver,
    createManyAccount: actionResolvers.CreateManyAccountResolver,
    createOneAccount: actionResolvers.CreateOneAccountResolver,
    deleteManyAccount: actionResolvers.DeleteManyAccountResolver,
    deleteOneAccount: actionResolvers.DeleteOneAccountResolver,
    findFirstAccount: actionResolvers.FindFirstAccountResolver,
    findFirstAccountOrThrow: actionResolvers.FindFirstAccountOrThrowResolver,
    accounts: actionResolvers.FindManyAccountResolver,
    account: actionResolvers.FindUniqueAccountResolver,
    getAccount: actionResolvers.FindUniqueAccountOrThrowResolver,
    groupByAccount: actionResolvers.GroupByAccountResolver,
    updateManyAccount: actionResolvers.UpdateManyAccountResolver,
    updateOneAccount: actionResolvers.UpdateOneAccountResolver,
    upsertOneAccount: actionResolvers.UpsertOneAccountResolver,
  },
  Session: {
    aggregateSession: actionResolvers.AggregateSessionResolver,
    createManySession: actionResolvers.CreateManySessionResolver,
    createOneSession: actionResolvers.CreateOneSessionResolver,
    deleteManySession: actionResolvers.DeleteManySessionResolver,
    deleteOneSession: actionResolvers.DeleteOneSessionResolver,
    findFirstSession: actionResolvers.FindFirstSessionResolver,
    findFirstSessionOrThrow: actionResolvers.FindFirstSessionOrThrowResolver,
    sessions: actionResolvers.FindManySessionResolver,
    session: actionResolvers.FindUniqueSessionResolver,
    getSession: actionResolvers.FindUniqueSessionOrThrowResolver,
    groupBySession: actionResolvers.GroupBySessionResolver,
    updateManySession: actionResolvers.UpdateManySessionResolver,
    updateOneSession: actionResolvers.UpdateOneSessionResolver,
    upsertOneSession: actionResolvers.UpsertOneSessionResolver,
  },
  VerificationToken: {
    aggregateVerificationToken: actionResolvers.AggregateVerificationTokenResolver,
    createManyVerificationToken: actionResolvers.CreateManyVerificationTokenResolver,
    createOneVerificationToken: actionResolvers.CreateOneVerificationTokenResolver,
    deleteManyVerificationToken: actionResolvers.DeleteManyVerificationTokenResolver,
    deleteOneVerificationToken: actionResolvers.DeleteOneVerificationTokenResolver,
    findFirstVerificationToken: actionResolvers.FindFirstVerificationTokenResolver,
    findFirstVerificationTokenOrThrow: actionResolvers.FindFirstVerificationTokenOrThrowResolver,
    verificationTokens: actionResolvers.FindManyVerificationTokenResolver,
    verificationToken: actionResolvers.FindUniqueVerificationTokenResolver,
    getVerificationToken: actionResolvers.FindUniqueVerificationTokenOrThrowResolver,
    groupByVerificationToken: actionResolvers.GroupByVerificationTokenResolver,
    updateManyVerificationToken: actionResolvers.UpdateManyVerificationTokenResolver,
    updateOneVerificationToken: actionResolvers.UpdateOneVerificationTokenResolver,
    upsertOneVerificationToken: actionResolvers.UpsertOneVerificationTokenResolver,
  },
  Spatial_ref_sys: {
    aggregateSpatial_ref_sys: actionResolvers.AggregateSpatial_ref_sysResolver,
    createManySpatial_ref_sys: actionResolvers.CreateManySpatial_ref_sysResolver,
    createOneSpatial_ref_sys: actionResolvers.CreateOneSpatial_ref_sysResolver,
    deleteManySpatial_ref_sys: actionResolvers.DeleteManySpatial_ref_sysResolver,
    deleteOneSpatial_ref_sys: actionResolvers.DeleteOneSpatial_ref_sysResolver,
    findFirstSpatial_ref_sys: actionResolvers.FindFirstSpatial_ref_sysResolver,
    findFirstSpatial_ref_sysOrThrow: actionResolvers.FindFirstSpatial_ref_sysOrThrowResolver,
    findManySpatial_ref_sys: actionResolvers.FindManySpatial_ref_sysResolver,
    findUniqueSpatial_ref_sys: actionResolvers.FindUniqueSpatial_ref_sysResolver,
    findUniqueSpatial_ref_sysOrThrow: actionResolvers.FindUniqueSpatial_ref_sysOrThrowResolver,
    groupBySpatial_ref_sys: actionResolvers.GroupBySpatial_ref_sysResolver,
    updateManySpatial_ref_sys: actionResolvers.UpdateManySpatial_ref_sysResolver,
    updateOneSpatial_ref_sys: actionResolvers.UpdateOneSpatial_ref_sysResolver,
    upsertOneSpatial_ref_sys: actionResolvers.UpsertOneSpatial_ref_sysResolver,
  },
};
const crudResolversInfo = {
  User: [
    'aggregateUser',
    'createManyUser',
    'createOneUser',
    'deleteManyUser',
    'deleteOneUser',
    'findFirstUser',
    'findFirstUserOrThrow',
    'users',
    'user',
    'getUser',
    'groupByUser',
    'updateManyUser',
    'updateOneUser',
    'upsertOneUser',
  ],
  UserFile: [
    'aggregateUserFile',
    'createManyUserFile',
    'createOneUserFile',
    'deleteManyUserFile',
    'deleteOneUserFile',
    'findFirstUserFile',
    'findFirstUserFileOrThrow',
    'userFiles',
    'userFile',
    'getUserFile',
    'groupByUserFile',
    'updateManyUserFile',
    'updateOneUserFile',
    'upsertOneUserFile',
  ],
  UserAddress: [
    'aggregateUserAddress',
    'createManyUserAddress',
    'createOneUserAddress',
    'deleteManyUserAddress',
    'deleteOneUserAddress',
    'findFirstUserAddress',
    'findFirstUserAddressOrThrow',
    'userAddresses',
    'userAddress',
    'getUserAddress',
    'groupByUserAddress',
    'updateManyUserAddress',
    'updateOneUserAddress',
    'upsertOneUserAddress',
  ],
  Post: [
    'aggregatePost',
    'createManyPost',
    'createOnePost',
    'deleteManyPost',
    'deleteOnePost',
    'findFirstPost',
    'findFirstPostOrThrow',
    'posts',
    'post',
    'getPost',
    'groupByPost',
    'updateManyPost',
    'updateOnePost',
    'upsertOnePost',
  ],
  Comment: [
    'aggregateComment',
    'createManyComment',
    'createOneComment',
    'deleteManyComment',
    'deleteOneComment',
    'findFirstComment',
    'findFirstCommentOrThrow',
    'comments',
    'comment',
    'getComment',
    'groupByComment',
    'updateManyComment',
    'updateOneComment',
    'upsertOneComment',
  ],
  PostFile: [
    'aggregatePostFile',
    'createManyPostFile',
    'createOnePostFile',
    'deleteManyPostFile',
    'deleteOnePostFile',
    'findFirstPostFile',
    'findFirstPostFileOrThrow',
    'postFiles',
    'postFile',
    'getPostFile',
    'groupByPostFile',
    'updateManyPostFile',
    'updateOnePostFile',
    'upsertOnePostFile',
  ],
  File: [
    'aggregateFile',
    'createManyFile',
    'createOneFile',
    'deleteManyFile',
    'deleteOneFile',
    'findFirstFile',
    'findFirstFileOrThrow',
    'files',
    'file',
    'getFile',
    'groupByFile',
    'updateManyFile',
    'updateOneFile',
    'upsertOneFile',
  ],
  Address: [
    'aggregateAddress',
    'deleteManyAddress',
    'deleteOneAddress',
    'findFirstAddress',
    'findFirstAddressOrThrow',
    'addresses',
    'address',
    'getAddress',
    'groupByAddress',
    'updateManyAddress',
    'updateOneAddress',
  ],
  Chat: [
    'aggregateChat',
    'createManyChat',
    'createOneChat',
    'deleteManyChat',
    'deleteOneChat',
    'findFirstChat',
    'findFirstChatOrThrow',
    'chats',
    'chat',
    'getChat',
    'groupByChat',
    'updateManyChat',
    'updateOneChat',
    'upsertOneChat',
  ],
  ChatUser: [
    'aggregateChatUser',
    'createManyChatUser',
    'createOneChatUser',
    'deleteManyChatUser',
    'deleteOneChatUser',
    'findFirstChatUser',
    'findFirstChatUserOrThrow',
    'chatUsers',
    'chatUser',
    'getChatUser',
    'groupByChatUser',
    'updateManyChatUser',
    'updateOneChatUser',
    'upsertOneChatUser',
  ],
  ChatMessage: [
    'aggregateChatMessage',
    'createManyChatMessage',
    'createOneChatMessage',
    'deleteManyChatMessage',
    'deleteOneChatMessage',
    'findFirstChatMessage',
    'findFirstChatMessageOrThrow',
    'chatMessages',
    'chatMessage',
    'getChatMessage',
    'groupByChatMessage',
    'updateManyChatMessage',
    'updateOneChatMessage',
    'upsertOneChatMessage',
  ],
  Account: [
    'aggregateAccount',
    'createManyAccount',
    'createOneAccount',
    'deleteManyAccount',
    'deleteOneAccount',
    'findFirstAccount',
    'findFirstAccountOrThrow',
    'accounts',
    'account',
    'getAccount',
    'groupByAccount',
    'updateManyAccount',
    'updateOneAccount',
    'upsertOneAccount',
  ],
  Session: [
    'aggregateSession',
    'createManySession',
    'createOneSession',
    'deleteManySession',
    'deleteOneSession',
    'findFirstSession',
    'findFirstSessionOrThrow',
    'sessions',
    'session',
    'getSession',
    'groupBySession',
    'updateManySession',
    'updateOneSession',
    'upsertOneSession',
  ],
  VerificationToken: [
    'aggregateVerificationToken',
    'createManyVerificationToken',
    'createOneVerificationToken',
    'deleteManyVerificationToken',
    'deleteOneVerificationToken',
    'findFirstVerificationToken',
    'findFirstVerificationTokenOrThrow',
    'verificationTokens',
    'verificationToken',
    'getVerificationToken',
    'groupByVerificationToken',
    'updateManyVerificationToken',
    'updateOneVerificationToken',
    'upsertOneVerificationToken',
  ],
  Spatial_ref_sys: [
    'aggregateSpatial_ref_sys',
    'createManySpatial_ref_sys',
    'createOneSpatial_ref_sys',
    'deleteManySpatial_ref_sys',
    'deleteOneSpatial_ref_sys',
    'findFirstSpatial_ref_sys',
    'findFirstSpatial_ref_sysOrThrow',
    'findManySpatial_ref_sys',
    'findUniqueSpatial_ref_sys',
    'findUniqueSpatial_ref_sysOrThrow',
    'groupBySpatial_ref_sys',
    'updateManySpatial_ref_sys',
    'updateOneSpatial_ref_sys',
    'upsertOneSpatial_ref_sys',
  ],
};
const argsInfo = {
  AggregateUserArgs: ['where', 'orderBy', 'cursor', 'take', 'skip'],
  CreateManyUserArgs: ['data', 'skipDuplicates'],
  CreateOneUserArgs: ['data', 'relationLoadStrategy'],
  DeleteManyUserArgs: ['where'],
  DeleteOneUserArgs: ['where', 'relationLoadStrategy'],
  FindFirstUserArgs: ['where', 'orderBy', 'cursor', 'take', 'skip', 'distinct', 'relationLoadStrategy'],
  FindFirstUserOrThrowArgs: ['where', 'orderBy', 'cursor', 'take', 'skip', 'distinct', 'relationLoadStrategy'],
  FindManyUserArgs: ['where', 'orderBy', 'cursor', 'take', 'skip', 'distinct', 'relationLoadStrategy'],
  FindUniqueUserArgs: ['where', 'relationLoadStrategy'],
  FindUniqueUserOrThrowArgs: ['where', 'relationLoadStrategy'],
  GroupByUserArgs: ['where', 'orderBy', 'by', 'having', 'take', 'skip'],
  UpdateManyUserArgs: ['data', 'where'],
  UpdateOneUserArgs: ['data', 'where', 'relationLoadStrategy'],
  UpsertOneUserArgs: ['where', 'create', 'update', 'relationLoadStrategy'],
  AggregateUserFileArgs: ['where', 'orderBy', 'cursor', 'take', 'skip'],
  CreateManyUserFileArgs: ['data', 'skipDuplicates'],
  CreateOneUserFileArgs: ['data', 'relationLoadStrategy'],
  DeleteManyUserFileArgs: ['where'],
  DeleteOneUserFileArgs: ['where', 'relationLoadStrategy'],
  FindFirstUserFileArgs: ['where', 'orderBy', 'cursor', 'take', 'skip', 'distinct', 'relationLoadStrategy'],
  FindFirstUserFileOrThrowArgs: ['where', 'orderBy', 'cursor', 'take', 'skip', 'distinct', 'relationLoadStrategy'],
  FindManyUserFileArgs: ['where', 'orderBy', 'cursor', 'take', 'skip', 'distinct', 'relationLoadStrategy'],
  FindUniqueUserFileArgs: ['where', 'relationLoadStrategy'],
  FindUniqueUserFileOrThrowArgs: ['where', 'relationLoadStrategy'],
  GroupByUserFileArgs: ['where', 'orderBy', 'by', 'having', 'take', 'skip'],
  UpdateManyUserFileArgs: ['data', 'where'],
  UpdateOneUserFileArgs: ['data', 'where', 'relationLoadStrategy'],
  UpsertOneUserFileArgs: ['where', 'create', 'update', 'relationLoadStrategy'],
  AggregateUserAddressArgs: ['where', 'orderBy', 'cursor', 'take', 'skip'],
  CreateManyUserAddressArgs: ['data', 'skipDuplicates'],
  CreateOneUserAddressArgs: ['data', 'relationLoadStrategy'],
  DeleteManyUserAddressArgs: ['where'],
  DeleteOneUserAddressArgs: ['where', 'relationLoadStrategy'],
  FindFirstUserAddressArgs: ['where', 'orderBy', 'cursor', 'take', 'skip', 'distinct', 'relationLoadStrategy'],
  FindFirstUserAddressOrThrowArgs: ['where', 'orderBy', 'cursor', 'take', 'skip', 'distinct', 'relationLoadStrategy'],
  FindManyUserAddressArgs: ['where', 'orderBy', 'cursor', 'take', 'skip', 'distinct', 'relationLoadStrategy'],
  FindUniqueUserAddressArgs: ['where', 'relationLoadStrategy'],
  FindUniqueUserAddressOrThrowArgs: ['where', 'relationLoadStrategy'],
  GroupByUserAddressArgs: ['where', 'orderBy', 'by', 'having', 'take', 'skip'],
  UpdateManyUserAddressArgs: ['data', 'where'],
  UpdateOneUserAddressArgs: ['data', 'where', 'relationLoadStrategy'],
  UpsertOneUserAddressArgs: ['where', 'create', 'update', 'relationLoadStrategy'],
  AggregatePostArgs: ['where', 'orderBy', 'cursor', 'take', 'skip'],
  CreateManyPostArgs: ['data', 'skipDuplicates'],
  CreateOnePostArgs: ['data', 'relationLoadStrategy'],
  DeleteManyPostArgs: ['where'],
  DeleteOnePostArgs: ['where', 'relationLoadStrategy'],
  FindFirstPostArgs: ['where', 'orderBy', 'cursor', 'take', 'skip', 'distinct', 'relationLoadStrategy'],
  FindFirstPostOrThrowArgs: ['where', 'orderBy', 'cursor', 'take', 'skip', 'distinct', 'relationLoadStrategy'],
  FindManyPostArgs: ['where', 'orderBy', 'cursor', 'take', 'skip', 'distinct', 'relationLoadStrategy'],
  FindUniquePostArgs: ['where', 'relationLoadStrategy'],
  FindUniquePostOrThrowArgs: ['where', 'relationLoadStrategy'],
  GroupByPostArgs: ['where', 'orderBy', 'by', 'having', 'take', 'skip'],
  UpdateManyPostArgs: ['data', 'where'],
  UpdateOnePostArgs: ['data', 'where', 'relationLoadStrategy'],
  UpsertOnePostArgs: ['where', 'create', 'update', 'relationLoadStrategy'],
  AggregateCommentArgs: ['where', 'orderBy', 'cursor', 'take', 'skip'],
  CreateManyCommentArgs: ['data', 'skipDuplicates'],
  CreateOneCommentArgs: ['data', 'relationLoadStrategy'],
  DeleteManyCommentArgs: ['where'],
  DeleteOneCommentArgs: ['where', 'relationLoadStrategy'],
  FindFirstCommentArgs: ['where', 'orderBy', 'cursor', 'take', 'skip', 'distinct', 'relationLoadStrategy'],
  FindFirstCommentOrThrowArgs: ['where', 'orderBy', 'cursor', 'take', 'skip', 'distinct', 'relationLoadStrategy'],
  FindManyCommentArgs: ['where', 'orderBy', 'cursor', 'take', 'skip', 'distinct', 'relationLoadStrategy'],
  FindUniqueCommentArgs: ['where', 'relationLoadStrategy'],
  FindUniqueCommentOrThrowArgs: ['where', 'relationLoadStrategy'],
  GroupByCommentArgs: ['where', 'orderBy', 'by', 'having', 'take', 'skip'],
  UpdateManyCommentArgs: ['data', 'where'],
  UpdateOneCommentArgs: ['data', 'where', 'relationLoadStrategy'],
  UpsertOneCommentArgs: ['where', 'create', 'update', 'relationLoadStrategy'],
  AggregatePostFileArgs: ['where', 'orderBy', 'cursor', 'take', 'skip'],
  CreateManyPostFileArgs: ['data', 'skipDuplicates'],
  CreateOnePostFileArgs: ['data', 'relationLoadStrategy'],
  DeleteManyPostFileArgs: ['where'],
  DeleteOnePostFileArgs: ['where', 'relationLoadStrategy'],
  FindFirstPostFileArgs: ['where', 'orderBy', 'cursor', 'take', 'skip', 'distinct', 'relationLoadStrategy'],
  FindFirstPostFileOrThrowArgs: ['where', 'orderBy', 'cursor', 'take', 'skip', 'distinct', 'relationLoadStrategy'],
  FindManyPostFileArgs: ['where', 'orderBy', 'cursor', 'take', 'skip', 'distinct', 'relationLoadStrategy'],
  FindUniquePostFileArgs: ['where', 'relationLoadStrategy'],
  FindUniquePostFileOrThrowArgs: ['where', 'relationLoadStrategy'],
  GroupByPostFileArgs: ['where', 'orderBy', 'by', 'having', 'take', 'skip'],
  UpdateManyPostFileArgs: ['data', 'where'],
  UpdateOnePostFileArgs: ['data', 'where', 'relationLoadStrategy'],
  UpsertOnePostFileArgs: ['where', 'create', 'update', 'relationLoadStrategy'],
  AggregateFileArgs: ['where', 'orderBy', 'cursor', 'take', 'skip'],
  CreateManyFileArgs: ['data', 'skipDuplicates'],
  CreateOneFileArgs: ['data', 'relationLoadStrategy'],
  DeleteManyFileArgs: ['where'],
  DeleteOneFileArgs: ['where', 'relationLoadStrategy'],
  FindFirstFileArgs: ['where', 'orderBy', 'cursor', 'take', 'skip', 'distinct', 'relationLoadStrategy'],
  FindFirstFileOrThrowArgs: ['where', 'orderBy', 'cursor', 'take', 'skip', 'distinct', 'relationLoadStrategy'],
  FindManyFileArgs: ['where', 'orderBy', 'cursor', 'take', 'skip', 'distinct', 'relationLoadStrategy'],
  FindUniqueFileArgs: ['where', 'relationLoadStrategy'],
  FindUniqueFileOrThrowArgs: ['where', 'relationLoadStrategy'],
  GroupByFileArgs: ['where', 'orderBy', 'by', 'having', 'take', 'skip'],
  UpdateManyFileArgs: ['data', 'where'],
  UpdateOneFileArgs: ['data', 'where', 'relationLoadStrategy'],
  UpsertOneFileArgs: ['where', 'create', 'update', 'relationLoadStrategy'],
  AggregateAddressArgs: ['where', 'orderBy', 'cursor', 'take', 'skip'],
  DeleteManyAddressArgs: ['where'],
  DeleteOneAddressArgs: ['where', 'relationLoadStrategy'],
  FindFirstAddressArgs: ['where', 'orderBy', 'cursor', 'take', 'skip', 'distinct', 'relationLoadStrategy'],
  FindFirstAddressOrThrowArgs: ['where', 'orderBy', 'cursor', 'take', 'skip', 'distinct', 'relationLoadStrategy'],
  FindManyAddressArgs: ['where', 'orderBy', 'cursor', 'take', 'skip', 'distinct', 'relationLoadStrategy'],
  FindUniqueAddressArgs: ['where', 'relationLoadStrategy'],
  FindUniqueAddressOrThrowArgs: ['where', 'relationLoadStrategy'],
  GroupByAddressArgs: ['where', 'orderBy', 'by', 'having', 'take', 'skip'],
  UpdateManyAddressArgs: ['data', 'where'],
  UpdateOneAddressArgs: ['data', 'where', 'relationLoadStrategy'],
  AggregateChatArgs: ['where', 'orderBy', 'cursor', 'take', 'skip'],
  CreateManyChatArgs: ['data', 'skipDuplicates'],
  CreateOneChatArgs: ['data', 'relationLoadStrategy'],
  DeleteManyChatArgs: ['where'],
  DeleteOneChatArgs: ['where', 'relationLoadStrategy'],
  FindFirstChatArgs: ['where', 'orderBy', 'cursor', 'take', 'skip', 'distinct', 'relationLoadStrategy'],
  FindFirstChatOrThrowArgs: ['where', 'orderBy', 'cursor', 'take', 'skip', 'distinct', 'relationLoadStrategy'],
  FindManyChatArgs: ['where', 'orderBy', 'cursor', 'take', 'skip', 'distinct', 'relationLoadStrategy'],
  FindUniqueChatArgs: ['where', 'relationLoadStrategy'],
  FindUniqueChatOrThrowArgs: ['where', 'relationLoadStrategy'],
  GroupByChatArgs: ['where', 'orderBy', 'by', 'having', 'take', 'skip'],
  UpdateManyChatArgs: ['data', 'where'],
  UpdateOneChatArgs: ['data', 'where', 'relationLoadStrategy'],
  UpsertOneChatArgs: ['where', 'create', 'update', 'relationLoadStrategy'],
  AggregateChatUserArgs: ['where', 'orderBy', 'cursor', 'take', 'skip'],
  CreateManyChatUserArgs: ['data', 'skipDuplicates'],
  CreateOneChatUserArgs: ['data', 'relationLoadStrategy'],
  DeleteManyChatUserArgs: ['where'],
  DeleteOneChatUserArgs: ['where', 'relationLoadStrategy'],
  FindFirstChatUserArgs: ['where', 'orderBy', 'cursor', 'take', 'skip', 'distinct', 'relationLoadStrategy'],
  FindFirstChatUserOrThrowArgs: ['where', 'orderBy', 'cursor', 'take', 'skip', 'distinct', 'relationLoadStrategy'],
  FindManyChatUserArgs: ['where', 'orderBy', 'cursor', 'take', 'skip', 'distinct', 'relationLoadStrategy'],
  FindUniqueChatUserArgs: ['where', 'relationLoadStrategy'],
  FindUniqueChatUserOrThrowArgs: ['where', 'relationLoadStrategy'],
  GroupByChatUserArgs: ['where', 'orderBy', 'by', 'having', 'take', 'skip'],
  UpdateManyChatUserArgs: ['data', 'where'],
  UpdateOneChatUserArgs: ['data', 'where', 'relationLoadStrategy'],
  UpsertOneChatUserArgs: ['where', 'create', 'update', 'relationLoadStrategy'],
  AggregateChatMessageArgs: ['where', 'orderBy', 'cursor', 'take', 'skip'],
  CreateManyChatMessageArgs: ['data', 'skipDuplicates'],
  CreateOneChatMessageArgs: ['data', 'relationLoadStrategy'],
  DeleteManyChatMessageArgs: ['where'],
  DeleteOneChatMessageArgs: ['where', 'relationLoadStrategy'],
  FindFirstChatMessageArgs: ['where', 'orderBy', 'cursor', 'take', 'skip', 'distinct', 'relationLoadStrategy'],
  FindFirstChatMessageOrThrowArgs: ['where', 'orderBy', 'cursor', 'take', 'skip', 'distinct', 'relationLoadStrategy'],
  FindManyChatMessageArgs: ['where', 'orderBy', 'cursor', 'take', 'skip', 'distinct', 'relationLoadStrategy'],
  FindUniqueChatMessageArgs: ['where', 'relationLoadStrategy'],
  FindUniqueChatMessageOrThrowArgs: ['where', 'relationLoadStrategy'],
  GroupByChatMessageArgs: ['where', 'orderBy', 'by', 'having', 'take', 'skip'],
  UpdateManyChatMessageArgs: ['data', 'where'],
  UpdateOneChatMessageArgs: ['data', 'where', 'relationLoadStrategy'],
  UpsertOneChatMessageArgs: ['where', 'create', 'update', 'relationLoadStrategy'],
  AggregateAccountArgs: ['where', 'orderBy', 'cursor', 'take', 'skip'],
  CreateManyAccountArgs: ['data', 'skipDuplicates'],
  CreateOneAccountArgs: ['data', 'relationLoadStrategy'],
  DeleteManyAccountArgs: ['where'],
  DeleteOneAccountArgs: ['where', 'relationLoadStrategy'],
  FindFirstAccountArgs: ['where', 'orderBy', 'cursor', 'take', 'skip', 'distinct', 'relationLoadStrategy'],
  FindFirstAccountOrThrowArgs: ['where', 'orderBy', 'cursor', 'take', 'skip', 'distinct', 'relationLoadStrategy'],
  FindManyAccountArgs: ['where', 'orderBy', 'cursor', 'take', 'skip', 'distinct', 'relationLoadStrategy'],
  FindUniqueAccountArgs: ['where', 'relationLoadStrategy'],
  FindUniqueAccountOrThrowArgs: ['where', 'relationLoadStrategy'],
  GroupByAccountArgs: ['where', 'orderBy', 'by', 'having', 'take', 'skip'],
  UpdateManyAccountArgs: ['data', 'where'],
  UpdateOneAccountArgs: ['data', 'where', 'relationLoadStrategy'],
  UpsertOneAccountArgs: ['where', 'create', 'update', 'relationLoadStrategy'],
  AggregateSessionArgs: ['where', 'orderBy', 'cursor', 'take', 'skip'],
  CreateManySessionArgs: ['data', 'skipDuplicates'],
  CreateOneSessionArgs: ['data', 'relationLoadStrategy'],
  DeleteManySessionArgs: ['where'],
  DeleteOneSessionArgs: ['where', 'relationLoadStrategy'],
  FindFirstSessionArgs: ['where', 'orderBy', 'cursor', 'take', 'skip', 'distinct', 'relationLoadStrategy'],
  FindFirstSessionOrThrowArgs: ['where', 'orderBy', 'cursor', 'take', 'skip', 'distinct', 'relationLoadStrategy'],
  FindManySessionArgs: ['where', 'orderBy', 'cursor', 'take', 'skip', 'distinct', 'relationLoadStrategy'],
  FindUniqueSessionArgs: ['where', 'relationLoadStrategy'],
  FindUniqueSessionOrThrowArgs: ['where', 'relationLoadStrategy'],
  GroupBySessionArgs: ['where', 'orderBy', 'by', 'having', 'take', 'skip'],
  UpdateManySessionArgs: ['data', 'where'],
  UpdateOneSessionArgs: ['data', 'where', 'relationLoadStrategy'],
  UpsertOneSessionArgs: ['where', 'create', 'update', 'relationLoadStrategy'],
  AggregateVerificationTokenArgs: ['where', 'orderBy', 'cursor', 'take', 'skip'],
  CreateManyVerificationTokenArgs: ['data', 'skipDuplicates'],
  CreateOneVerificationTokenArgs: ['data', 'relationLoadStrategy'],
  DeleteManyVerificationTokenArgs: ['where'],
  DeleteOneVerificationTokenArgs: ['where', 'relationLoadStrategy'],
  FindFirstVerificationTokenArgs: ['where', 'orderBy', 'cursor', 'take', 'skip', 'distinct', 'relationLoadStrategy'],
  FindFirstVerificationTokenOrThrowArgs: [
    'where',
    'orderBy',
    'cursor',
    'take',
    'skip',
    'distinct',
    'relationLoadStrategy',
  ],
  FindManyVerificationTokenArgs: ['where', 'orderBy', 'cursor', 'take', 'skip', 'distinct', 'relationLoadStrategy'],
  FindUniqueVerificationTokenArgs: ['where', 'relationLoadStrategy'],
  FindUniqueVerificationTokenOrThrowArgs: ['where', 'relationLoadStrategy'],
  GroupByVerificationTokenArgs: ['where', 'orderBy', 'by', 'having', 'take', 'skip'],
  UpdateManyVerificationTokenArgs: ['data', 'where'],
  UpdateOneVerificationTokenArgs: ['data', 'where', 'relationLoadStrategy'],
  UpsertOneVerificationTokenArgs: ['where', 'create', 'update', 'relationLoadStrategy'],
  AggregateSpatial_ref_sysArgs: ['where', 'orderBy', 'cursor', 'take', 'skip'],
  CreateManySpatial_ref_sysArgs: ['data', 'skipDuplicates'],
  CreateOneSpatial_ref_sysArgs: ['data', 'relationLoadStrategy'],
  DeleteManySpatial_ref_sysArgs: ['where'],
  DeleteOneSpatial_ref_sysArgs: ['where', 'relationLoadStrategy'],
  FindFirstSpatial_ref_sysArgs: ['where', 'orderBy', 'cursor', 'take', 'skip', 'distinct', 'relationLoadStrategy'],
  FindFirstSpatial_ref_sysOrThrowArgs: [
    'where',
    'orderBy',
    'cursor',
    'take',
    'skip',
    'distinct',
    'relationLoadStrategy',
  ],
  FindManySpatial_ref_sysArgs: ['where', 'orderBy', 'cursor', 'take', 'skip', 'distinct', 'relationLoadStrategy'],
  FindUniqueSpatial_ref_sysArgs: ['where', 'relationLoadStrategy'],
  FindUniqueSpatial_ref_sysOrThrowArgs: ['where', 'relationLoadStrategy'],
  GroupBySpatial_ref_sysArgs: ['where', 'orderBy', 'by', 'having', 'take', 'skip'],
  UpdateManySpatial_ref_sysArgs: ['data', 'where'],
  UpdateOneSpatial_ref_sysArgs: ['data', 'where', 'relationLoadStrategy'],
  UpsertOneSpatial_ref_sysArgs: ['where', 'create', 'update', 'relationLoadStrategy'],
};

type ResolverModelNames = keyof typeof crudResolversMap;

type ModelResolverActionNames<TModel extends ResolverModelNames> = keyof (typeof crudResolversMap)[TModel]['prototype'];

export type ResolverActionsConfig<TModel extends ResolverModelNames> = Partial<
  Record<ModelResolverActionNames<TModel>, MethodDecorator[] | MethodDecoratorOverrideFn>
> & {
  _all?: MethodDecorator[];
  _query?: MethodDecorator[];
  _mutation?: MethodDecorator[];
};

export type ResolversEnhanceMap = {
  [TModel in ResolverModelNames]?: ResolverActionsConfig<TModel>;
};

export function applyResolversEnhanceMap(resolversEnhanceMap: ResolversEnhanceMap) {
  const mutationOperationPrefixes = [
    'createOne',
    'createMany',
    'deleteOne',
    'updateOne',
    'deleteMany',
    'updateMany',
    'upsertOne',
  ];
  for (const resolversEnhanceMapKey of Object.keys(resolversEnhanceMap)) {
    const modelName = resolversEnhanceMapKey as keyof typeof resolversEnhanceMap;
    const crudTarget = crudResolversMap[modelName].prototype;
    const resolverActionsConfig = resolversEnhanceMap[modelName]!;
    const actionResolversConfig = actionResolversMap[modelName];
    const allActionsDecorators = resolverActionsConfig._all;
    const resolverActionNames = crudResolversInfo[modelName as keyof typeof crudResolversInfo];
    for (const resolverActionName of resolverActionNames) {
      const maybeDecoratorsOrFn = resolverActionsConfig[resolverActionName as keyof typeof resolverActionsConfig] as
        | MethodDecorator[]
        | MethodDecoratorOverrideFn
        | undefined;
      const isWriteOperation = mutationOperationPrefixes.some((prefix) => resolverActionName.startsWith(prefix));
      const operationKindDecorators = isWriteOperation ? resolverActionsConfig._mutation : resolverActionsConfig._query;
      const mainDecorators = [...(allActionsDecorators ?? []), ...(operationKindDecorators ?? [])];
      let decorators: MethodDecorator[];
      if (typeof maybeDecoratorsOrFn === 'function') {
        decorators = maybeDecoratorsOrFn(mainDecorators);
      } else {
        decorators = [...mainDecorators, ...(maybeDecoratorsOrFn ?? [])];
      }
      const actionTarget = (actionResolversConfig[resolverActionName as keyof typeof actionResolversConfig] as Function)
        .prototype;
      tslib.__decorate(decorators, crudTarget, resolverActionName, null);
      tslib.__decorate(decorators, actionTarget, resolverActionName, null);
    }
  }
}

type ArgsTypesNames = keyof typeof argsTypes;

type ArgFieldNames<TArgsType extends ArgsTypesNames> = Exclude<
  keyof (typeof argsTypes)[TArgsType]['prototype'],
  number | symbol
>;

type ArgFieldsConfig<TArgsType extends ArgsTypesNames> = FieldsConfig<ArgFieldNames<TArgsType>>;

export type ArgConfig<TArgsType extends ArgsTypesNames> = {
  class?: ClassDecorator[];
  fields?: ArgFieldsConfig<TArgsType>;
};

export type ArgsTypesEnhanceMap = {
  [TArgsType in ArgsTypesNames]?: ArgConfig<TArgsType>;
};

export function applyArgsTypesEnhanceMap(argsTypesEnhanceMap: ArgsTypesEnhanceMap) {
  for (const argsTypesEnhanceMapKey of Object.keys(argsTypesEnhanceMap)) {
    const argsTypeName = argsTypesEnhanceMapKey as keyof typeof argsTypesEnhanceMap;
    const typeConfig = argsTypesEnhanceMap[argsTypeName]!;
    const typeClass = argsTypes[argsTypeName];
    const typeTarget = typeClass.prototype;
    applyTypeClassEnhanceConfig(typeConfig, typeClass, typeTarget, argsInfo[argsTypeName as keyof typeof argsInfo]);
  }
}

const relationResolversMap = {
  User: relationResolvers.UserRelationsResolver,
  UserFile: relationResolvers.UserFileRelationsResolver,
  UserAddress: relationResolvers.UserAddressRelationsResolver,
  Post: relationResolvers.PostRelationsResolver,
  Comment: relationResolvers.CommentRelationsResolver,
  PostFile: relationResolvers.PostFileRelationsResolver,
  File: relationResolvers.FileRelationsResolver,
  Address: relationResolvers.AddressRelationsResolver,
  Chat: relationResolvers.ChatRelationsResolver,
  ChatUser: relationResolvers.ChatUserRelationsResolver,
  ChatMessage: relationResolvers.ChatMessageRelationsResolver,
  Account: relationResolvers.AccountRelationsResolver,
  Session: relationResolvers.SessionRelationsResolver,
};
const relationResolversInfo = {
  User: ['accounts', 'chats', 'comments', 'posts', 'sessions', 'addresses', 'files', 'chatMessages'],
  UserFile: ['file', 'user'],
  UserAddress: ['address', 'user'],
  Post: ['comments', 'files', 'address', 'user'],
  Comment: ['post', 'user'],
  PostFile: ['file', 'post'],
  File: ['posts', 'files'],
  Address: ['posts', 'users'],
  Chat: ['messages', 'users'],
  ChatUser: ['chat', 'user'],
  ChatMessage: ['user', 'chat'],
  Account: ['user'],
  Session: ['user'],
};

type RelationResolverModelNames = keyof typeof relationResolversMap;

type RelationResolverActionNames<TModel extends RelationResolverModelNames> =
  keyof (typeof relationResolversMap)[TModel]['prototype'];

export type RelationResolverActionsConfig<TModel extends RelationResolverModelNames> = Partial<
  Record<RelationResolverActionNames<TModel>, MethodDecorator[] | MethodDecoratorOverrideFn>
> & { _all?: MethodDecorator[] };

export type RelationResolversEnhanceMap = {
  [TModel in RelationResolverModelNames]?: RelationResolverActionsConfig<TModel>;
};

export function applyRelationResolversEnhanceMap(relationResolversEnhanceMap: RelationResolversEnhanceMap) {
  for (const relationResolversEnhanceMapKey of Object.keys(relationResolversEnhanceMap)) {
    const modelName = relationResolversEnhanceMapKey as keyof typeof relationResolversEnhanceMap;
    const relationResolverTarget = relationResolversMap[modelName].prototype;
    const relationResolverActionsConfig = relationResolversEnhanceMap[modelName]!;
    const allActionsDecorators = relationResolverActionsConfig._all ?? [];
    const relationResolverActionNames = relationResolversInfo[modelName as keyof typeof relationResolversInfo];
    for (const relationResolverActionName of relationResolverActionNames) {
      const maybeDecoratorsOrFn = relationResolverActionsConfig[
        relationResolverActionName as keyof typeof relationResolverActionsConfig
      ] as MethodDecorator[] | MethodDecoratorOverrideFn | undefined;
      let decorators: MethodDecorator[];
      if (typeof maybeDecoratorsOrFn === 'function') {
        decorators = maybeDecoratorsOrFn(allActionsDecorators);
      } else {
        decorators = [...allActionsDecorators, ...(maybeDecoratorsOrFn ?? [])];
      }
      tslib.__decorate(decorators, relationResolverTarget, relationResolverActionName, null);
    }
  }
}

type TypeConfig = {
  class?: ClassDecorator[];
  fields?: FieldsConfig;
};

export type PropertyDecoratorOverrideFn = (decorators: PropertyDecorator[]) => PropertyDecorator[];

type FieldsConfig<TTypeKeys extends string = string> = Partial<
  Record<TTypeKeys, PropertyDecorator[] | PropertyDecoratorOverrideFn>
> & { _all?: PropertyDecorator[] };

function applyTypeClassEnhanceConfig<TEnhanceConfig extends TypeConfig, TType extends object>(
  enhanceConfig: TEnhanceConfig,
  typeClass: ClassType<TType>,
  typePrototype: TType,
  typeFieldNames: string[]
) {
  if (enhanceConfig.class) {
    tslib.__decorate(enhanceConfig.class, typeClass);
  }
  if (enhanceConfig.fields) {
    const allFieldsDecorators = enhanceConfig.fields._all ?? [];
    for (const typeFieldName of typeFieldNames) {
      const maybeDecoratorsOrFn = enhanceConfig.fields[typeFieldName] as
        | PropertyDecorator[]
        | PropertyDecoratorOverrideFn
        | undefined;
      let decorators: PropertyDecorator[];
      if (typeof maybeDecoratorsOrFn === 'function') {
        decorators = maybeDecoratorsOrFn(allFieldsDecorators);
      } else {
        decorators = [...allFieldsDecorators, ...(maybeDecoratorsOrFn ?? [])];
      }
      tslib.__decorate(decorators, typePrototype, typeFieldName, void 0);
    }
  }
}

const modelsInfo = {
  User: [
    'id',
    'content',
    'babyBirth',
    'createdAt',
    'updatedAt',
    'email',
    'emailVerified',
    'image',
    'name',
    'username',
    'role',
  ],
  UserFile: ['id', 'userId', 'fileId', 'createdAt', 'updatedAt'],
  UserAddress: ['id', 'userId', 'addressId', 'createdAt', 'updatedAt'],
  Post: ['id', 'content', 'addressId', 'createdAt', 'updatedAt', 'userId'],
  Comment: ['id', 'content', 'createdAt', 'updatedAt', 'userId', 'postId'],
  PostFile: ['id', 'postId', 'fileId', 'createdAt', 'updatedAt'],
  File: ['id', 'location', 'type', 'createdAt', 'updatedAt'],
  Address: ['id', 'code', 'c1', 'c2', 'c3', 'c4', 'createdAt', 'updatedAt'],
  Chat: ['id', 'name', 'createdAt', 'updatedAt'],
  ChatUser: ['id', 'createdAt', 'updatedAt', 'chatId', 'userId'],
  ChatMessage: ['id', 'message', 'createdAt', 'updatedAt', 'chatId', 'userId'],
  Account: [
    'type',
    'provider',
    'providerAccountId',
    'refresh_token',
    'access_token',
    'expires_at',
    'token_type',
    'scope',
    'id_token',
    'session_state',
    'createdAt',
    'updatedAt',
    'userId',
  ],
  Session: ['sessionToken', 'expires', 'createdAt', 'updatedAt', 'userId'],
  VerificationToken: ['identifier', 'token', 'expires'],
  Spatial_ref_sys: ['srid', 'auth_name', 'auth_srid', 'srtext', 'proj4text'],
};

type ModelNames = keyof typeof models;

type ModelFieldNames<TModel extends ModelNames> = Exclude<keyof (typeof models)[TModel]['prototype'], number | symbol>;

type ModelFieldsConfig<TModel extends ModelNames> = FieldsConfig<ModelFieldNames<TModel>>;

export type ModelConfig<TModel extends ModelNames> = {
  class?: ClassDecorator[];
  fields?: ModelFieldsConfig<TModel>;
};

export type ModelsEnhanceMap = {
  [TModel in ModelNames]?: ModelConfig<TModel>;
};

export function applyModelsEnhanceMap(modelsEnhanceMap: ModelsEnhanceMap) {
  for (const modelsEnhanceMapKey of Object.keys(modelsEnhanceMap)) {
    const modelName = modelsEnhanceMapKey as keyof typeof modelsEnhanceMap;
    const modelConfig = modelsEnhanceMap[modelName]!;
    const modelClass = models[modelName];
    const modelTarget = modelClass.prototype;
    applyTypeClassEnhanceConfig(modelConfig, modelClass, modelTarget, modelsInfo[modelName as keyof typeof modelsInfo]);
  }
}

const outputsInfo = {
  AggregateUser: ['_count', '_avg', '_sum', '_min', '_max'],
  UserGroupBy: [
    'id',
    'content',
    'babyBirth',
    'createdAt',
    'updatedAt',
    'email',
    'emailVerified',
    'image',
    'name',
    'username',
    'role',
    '_count',
    '_avg',
    '_sum',
    '_min',
    '_max',
  ],
  AggregateUserFile: ['_count', '_avg', '_sum', '_min', '_max'],
  UserFileGroupBy: ['id', 'userId', 'fileId', 'createdAt', 'updatedAt', '_count', '_avg', '_sum', '_min', '_max'],
  AggregateUserAddress: ['_count', '_avg', '_sum', '_min', '_max'],
  UserAddressGroupBy: ['id', 'userId', 'addressId', 'createdAt', 'updatedAt', '_count', '_avg', '_sum', '_min', '_max'],
  AggregatePost: ['_count', '_avg', '_sum', '_min', '_max'],
  PostGroupBy: [
    'id',
    'content',
    'addressId',
    'createdAt',
    'updatedAt',
    'userId',
    '_count',
    '_avg',
    '_sum',
    '_min',
    '_max',
  ],
  AggregateComment: ['_count', '_avg', '_sum', '_min', '_max'],
  CommentGroupBy: [
    'id',
    'content',
    'createdAt',
    'updatedAt',
    'userId',
    'postId',
    '_count',
    '_avg',
    '_sum',
    '_min',
    '_max',
  ],
  AggregatePostFile: ['_count', '_avg', '_sum', '_min', '_max'],
  PostFileGroupBy: ['id', 'postId', 'fileId', 'createdAt', 'updatedAt', '_count', '_avg', '_sum', '_min', '_max'],
  AggregateFile: ['_count', '_avg', '_sum', '_min', '_max'],
  FileGroupBy: ['id', 'location', 'type', 'createdAt', 'updatedAt', '_count', '_avg', '_sum', '_min', '_max'],
  AggregateAddress: ['_count', '_avg', '_sum', '_min', '_max'],
  AddressGroupBy: [
    'id',
    'code',
    'c1',
    'c2',
    'c3',
    'c4',
    'createdAt',
    'updatedAt',
    '_count',
    '_avg',
    '_sum',
    '_min',
    '_max',
  ],
  AggregateChat: ['_count', '_avg', '_sum', '_min', '_max'],
  ChatGroupBy: ['id', 'name', 'createdAt', 'updatedAt', '_count', '_avg', '_sum', '_min', '_max'],
  AggregateChatUser: ['_count', '_avg', '_sum', '_min', '_max'],
  ChatUserGroupBy: ['id', 'createdAt', 'updatedAt', 'chatId', 'userId', '_count', '_avg', '_sum', '_min', '_max'],
  AggregateChatMessage: ['_count', '_avg', '_sum', '_min', '_max'],
  ChatMessageGroupBy: [
    'id',
    'message',
    'createdAt',
    'updatedAt',
    'chatId',
    'userId',
    '_count',
    '_avg',
    '_sum',
    '_min',
    '_max',
  ],
  AggregateAccount: ['_count', '_avg', '_sum', '_min', '_max'],
  AccountGroupBy: [
    'type',
    'provider',
    'providerAccountId',
    'refresh_token',
    'access_token',
    'expires_at',
    'token_type',
    'scope',
    'id_token',
    'session_state',
    'createdAt',
    'updatedAt',
    'userId',
    '_count',
    '_avg',
    '_sum',
    '_min',
    '_max',
  ],
  AggregateSession: ['_count', '_avg', '_sum', '_min', '_max'],
  SessionGroupBy: [
    'sessionToken',
    'expires',
    'createdAt',
    'updatedAt',
    'userId',
    '_count',
    '_avg',
    '_sum',
    '_min',
    '_max',
  ],
  AggregateVerificationToken: ['_count', '_min', '_max'],
  VerificationTokenGroupBy: ['identifier', 'token', 'expires', '_count', '_min', '_max'],
  AggregateSpatial_ref_sys: ['_count', '_avg', '_sum', '_min', '_max'],
  Spatial_ref_sysGroupBy: [
    'srid',
    'auth_name',
    'auth_srid',
    'srtext',
    'proj4text',
    '_count',
    '_avg',
    '_sum',
    '_min',
    '_max',
  ],
  AffectedRowsOutput: ['count'],
  UserCount: ['accounts', 'chats', 'comments', 'posts', 'sessions', 'addresses', 'files', 'chatMessages'],
  UserCountAggregate: [
    'id',
    'content',
    'babyBirth',
    'createdAt',
    'updatedAt',
    'email',
    'emailVerified',
    'image',
    'name',
    'username',
    'role',
    '_all',
  ],
  UserAvgAggregate: ['id'],
  UserSumAggregate: ['id'],
  UserMinAggregate: [
    'id',
    'content',
    'babyBirth',
    'createdAt',
    'updatedAt',
    'email',
    'emailVerified',
    'image',
    'name',
    'username',
    'role',
  ],
  UserMaxAggregate: [
    'id',
    'content',
    'babyBirth',
    'createdAt',
    'updatedAt',
    'email',
    'emailVerified',
    'image',
    'name',
    'username',
    'role',
  ],
  UserFileCountAggregate: ['id', 'userId', 'fileId', 'createdAt', 'updatedAt', '_all'],
  UserFileAvgAggregate: ['id', 'userId', 'fileId'],
  UserFileSumAggregate: ['id', 'userId', 'fileId'],
  UserFileMinAggregate: ['id', 'userId', 'fileId', 'createdAt', 'updatedAt'],
  UserFileMaxAggregate: ['id', 'userId', 'fileId', 'createdAt', 'updatedAt'],
  UserAddressCountAggregate: ['id', 'userId', 'addressId', 'createdAt', 'updatedAt', '_all'],
  UserAddressAvgAggregate: ['id', 'userId', 'addressId'],
  UserAddressSumAggregate: ['id', 'userId', 'addressId'],
  UserAddressMinAggregate: ['id', 'userId', 'addressId', 'createdAt', 'updatedAt'],
  UserAddressMaxAggregate: ['id', 'userId', 'addressId', 'createdAt', 'updatedAt'],
  PostCount: ['comments', 'files'],
  PostCountAggregate: ['id', 'content', 'addressId', 'createdAt', 'updatedAt', 'userId', '_all'],
  PostAvgAggregate: ['id', 'addressId', 'userId'],
  PostSumAggregate: ['id', 'addressId', 'userId'],
  PostMinAggregate: ['id', 'content', 'addressId', 'createdAt', 'updatedAt', 'userId'],
  PostMaxAggregate: ['id', 'content', 'addressId', 'createdAt', 'updatedAt', 'userId'],
  CommentCountAggregate: ['id', 'content', 'createdAt', 'updatedAt', 'userId', 'postId', '_all'],
  CommentAvgAggregate: ['id', 'userId', 'postId'],
  CommentSumAggregate: ['id', 'userId', 'postId'],
  CommentMinAggregate: ['id', 'content', 'createdAt', 'updatedAt', 'userId', 'postId'],
  CommentMaxAggregate: ['id', 'content', 'createdAt', 'updatedAt', 'userId', 'postId'],
  PostFileCountAggregate: ['id', 'postId', 'fileId', 'createdAt', 'updatedAt', '_all'],
  PostFileAvgAggregate: ['id', 'postId', 'fileId'],
  PostFileSumAggregate: ['id', 'postId', 'fileId'],
  PostFileMinAggregate: ['id', 'postId', 'fileId', 'createdAt', 'updatedAt'],
  PostFileMaxAggregate: ['id', 'postId', 'fileId', 'createdAt', 'updatedAt'],
  FileCount: ['posts', 'files'],
  FileCountAggregate: ['id', 'location', 'type', 'createdAt', 'updatedAt', '_all'],
  FileAvgAggregate: ['id'],
  FileSumAggregate: ['id'],
  FileMinAggregate: ['id', 'location', 'type', 'createdAt', 'updatedAt'],
  FileMaxAggregate: ['id', 'location', 'type', 'createdAt', 'updatedAt'],
  AddressCount: ['posts', 'users'],
  AddressCountAggregate: ['id', 'code', 'c1', 'c2', 'c3', 'c4', 'createdAt', 'updatedAt', '_all'],
  AddressAvgAggregate: ['id'],
  AddressSumAggregate: ['id'],
  AddressMinAggregate: ['id', 'code', 'c1', 'c2', 'c3', 'c4', 'createdAt', 'updatedAt'],
  AddressMaxAggregate: ['id', 'code', 'c1', 'c2', 'c3', 'c4', 'createdAt', 'updatedAt'],
  ChatCount: ['messages', 'users'],
  ChatCountAggregate: ['id', 'name', 'createdAt', 'updatedAt', '_all'],
  ChatAvgAggregate: ['id'],
  ChatSumAggregate: ['id'],
  ChatMinAggregate: ['id', 'name', 'createdAt', 'updatedAt'],
  ChatMaxAggregate: ['id', 'name', 'createdAt', 'updatedAt'],
  ChatUserCountAggregate: ['id', 'createdAt', 'updatedAt', 'chatId', 'userId', '_all'],
  ChatUserAvgAggregate: ['id', 'chatId', 'userId'],
  ChatUserSumAggregate: ['id', 'chatId', 'userId'],
  ChatUserMinAggregate: ['id', 'createdAt', 'updatedAt', 'chatId', 'userId'],
  ChatUserMaxAggregate: ['id', 'createdAt', 'updatedAt', 'chatId', 'userId'],
  ChatMessageCountAggregate: ['id', 'message', 'createdAt', 'updatedAt', 'chatId', 'userId', '_all'],
  ChatMessageAvgAggregate: ['id', 'chatId', 'userId'],
  ChatMessageSumAggregate: ['id', 'chatId', 'userId'],
  ChatMessageMinAggregate: ['id', 'message', 'createdAt', 'updatedAt', 'chatId', 'userId'],
  ChatMessageMaxAggregate: ['id', 'message', 'createdAt', 'updatedAt', 'chatId', 'userId'],
  AccountCountAggregate: [
    'type',
    'provider',
    'providerAccountId',
    'refresh_token',
    'access_token',
    'expires_at',
    'token_type',
    'scope',
    'id_token',
    'session_state',
    'createdAt',
    'updatedAt',
    'userId',
    '_all',
  ],
  AccountAvgAggregate: ['expires_at', 'userId'],
  AccountSumAggregate: ['expires_at', 'userId'],
  AccountMinAggregate: [
    'type',
    'provider',
    'providerAccountId',
    'refresh_token',
    'access_token',
    'expires_at',
    'token_type',
    'scope',
    'id_token',
    'session_state',
    'createdAt',
    'updatedAt',
    'userId',
  ],
  AccountMaxAggregate: [
    'type',
    'provider',
    'providerAccountId',
    'refresh_token',
    'access_token',
    'expires_at',
    'token_type',
    'scope',
    'id_token',
    'session_state',
    'createdAt',
    'updatedAt',
    'userId',
  ],
  SessionCountAggregate: ['sessionToken', 'expires', 'createdAt', 'updatedAt', 'userId', '_all'],
  SessionAvgAggregate: ['userId'],
  SessionSumAggregate: ['userId'],
  SessionMinAggregate: ['sessionToken', 'expires', 'createdAt', 'updatedAt', 'userId'],
  SessionMaxAggregate: ['sessionToken', 'expires', 'createdAt', 'updatedAt', 'userId'],
  VerificationTokenCountAggregate: ['identifier', 'token', 'expires', '_all'],
  VerificationTokenMinAggregate: ['identifier', 'token', 'expires'],
  VerificationTokenMaxAggregate: ['identifier', 'token', 'expires'],
  Spatial_ref_sysCountAggregate: ['srid', 'auth_name', 'auth_srid', 'srtext', 'proj4text', '_all'],
  Spatial_ref_sysAvgAggregate: ['srid', 'auth_srid'],
  Spatial_ref_sysSumAggregate: ['srid', 'auth_srid'],
  Spatial_ref_sysMinAggregate: ['srid', 'auth_name', 'auth_srid', 'srtext', 'proj4text'],
  Spatial_ref_sysMaxAggregate: ['srid', 'auth_name', 'auth_srid', 'srtext', 'proj4text'],
};

type OutputTypesNames = keyof typeof outputTypes;

type OutputTypeFieldNames<TOutput extends OutputTypesNames> = Exclude<
  keyof (typeof outputTypes)[TOutput]['prototype'],
  number | symbol
>;

type OutputTypeFieldsConfig<TOutput extends OutputTypesNames> = FieldsConfig<OutputTypeFieldNames<TOutput>>;

export type OutputTypeConfig<TOutput extends OutputTypesNames> = {
  class?: ClassDecorator[];
  fields?: OutputTypeFieldsConfig<TOutput>;
};

export type OutputTypesEnhanceMap = {
  [TOutput in OutputTypesNames]?: OutputTypeConfig<TOutput>;
};

export function applyOutputTypesEnhanceMap(outputTypesEnhanceMap: OutputTypesEnhanceMap) {
  for (const outputTypeEnhanceMapKey of Object.keys(outputTypesEnhanceMap)) {
    const outputTypeName = outputTypeEnhanceMapKey as keyof typeof outputTypesEnhanceMap;
    const typeConfig = outputTypesEnhanceMap[outputTypeName]!;
    const typeClass = outputTypes[outputTypeName];
    const typeTarget = typeClass.prototype;
    applyTypeClassEnhanceConfig(
      typeConfig,
      typeClass,
      typeTarget,
      outputsInfo[outputTypeName as keyof typeof outputsInfo]
    );
  }
}

const inputsInfo = {
  UserWhereInput: [
    'AND',
    'OR',
    'NOT',
    'id',
    'content',
    'babyBirth',
    'createdAt',
    'updatedAt',
    'email',
    'emailVerified',
    'image',
    'name',
    'username',
    'role',
    'accounts',
    'chats',
    'comments',
    'posts',
    'sessions',
    'addresses',
    'files',
    'chatMessages',
  ],
  UserOrderByWithRelationInput: [
    'id',
    'content',
    'babyBirth',
    'createdAt',
    'updatedAt',
    'email',
    'emailVerified',
    'image',
    'name',
    'username',
    'role',
    'accounts',
    'chats',
    'comments',
    'posts',
    'sessions',
    'addresses',
    'files',
    'chatMessages',
  ],
  UserWhereUniqueInput: [
    'id',
    'email',
    'AND',
    'OR',
    'NOT',
    'content',
    'babyBirth',
    'createdAt',
    'updatedAt',
    'emailVerified',
    'image',
    'name',
    'username',
    'role',
    'accounts',
    'chats',
    'comments',
    'posts',
    'sessions',
    'addresses',
    'files',
    'chatMessages',
  ],
  UserOrderByWithAggregationInput: [
    'id',
    'content',
    'babyBirth',
    'createdAt',
    'updatedAt',
    'email',
    'emailVerified',
    'image',
    'name',
    'username',
    'role',
    '_count',
    '_avg',
    '_max',
    '_min',
    '_sum',
  ],
  UserScalarWhereWithAggregatesInput: [
    'AND',
    'OR',
    'NOT',
    'id',
    'content',
    'babyBirth',
    'createdAt',
    'updatedAt',
    'email',
    'emailVerified',
    'image',
    'name',
    'username',
    'role',
  ],
  UserFileWhereInput: ['AND', 'OR', 'NOT', 'id', 'userId', 'fileId', 'createdAt', 'updatedAt', 'file', 'user'],
  UserFileOrderByWithRelationInput: ['id', 'userId', 'fileId', 'createdAt', 'updatedAt', 'file', 'user'],
  UserFileWhereUniqueInput: ['id', 'AND', 'OR', 'NOT', 'userId', 'fileId', 'createdAt', 'updatedAt', 'file', 'user'],
  UserFileOrderByWithAggregationInput: [
    'id',
    'userId',
    'fileId',
    'createdAt',
    'updatedAt',
    '_count',
    '_avg',
    '_max',
    '_min',
    '_sum',
  ],
  UserFileScalarWhereWithAggregatesInput: ['AND', 'OR', 'NOT', 'id', 'userId', 'fileId', 'createdAt', 'updatedAt'],
  UserAddressWhereInput: ['AND', 'OR', 'NOT', 'id', 'userId', 'addressId', 'createdAt', 'updatedAt', 'address', 'user'],
  UserAddressOrderByWithRelationInput: ['id', 'userId', 'addressId', 'createdAt', 'updatedAt', 'address', 'user'],
  UserAddressWhereUniqueInput: [
    'id',
    'AND',
    'OR',
    'NOT',
    'userId',
    'addressId',
    'createdAt',
    'updatedAt',
    'address',
    'user',
  ],
  UserAddressOrderByWithAggregationInput: [
    'id',
    'userId',
    'addressId',
    'createdAt',
    'updatedAt',
    '_count',
    '_avg',
    '_max',
    '_min',
    '_sum',
  ],
  UserAddressScalarWhereWithAggregatesInput: [
    'AND',
    'OR',
    'NOT',
    'id',
    'userId',
    'addressId',
    'createdAt',
    'updatedAt',
  ],
  PostWhereInput: [
    'AND',
    'OR',
    'NOT',
    'id',
    'content',
    'addressId',
    'createdAt',
    'updatedAt',
    'userId',
    'comments',
    'files',
    'address',
    'user',
  ],
  PostOrderByWithRelationInput: [
    'id',
    'content',
    'addressId',
    'createdAt',
    'updatedAt',
    'userId',
    'comments',
    'files',
    'address',
    'user',
  ],
  PostWhereUniqueInput: [
    'id',
    'AND',
    'OR',
    'NOT',
    'content',
    'addressId',
    'createdAt',
    'updatedAt',
    'userId',
    'comments',
    'files',
    'address',
    'user',
  ],
  PostOrderByWithAggregationInput: [
    'id',
    'content',
    'addressId',
    'createdAt',
    'updatedAt',
    'userId',
    '_count',
    '_avg',
    '_max',
    '_min',
    '_sum',
  ],
  PostScalarWhereWithAggregatesInput: [
    'AND',
    'OR',
    'NOT',
    'id',
    'content',
    'addressId',
    'createdAt',
    'updatedAt',
    'userId',
  ],
  CommentWhereInput: [
    'AND',
    'OR',
    'NOT',
    'id',
    'content',
    'createdAt',
    'updatedAt',
    'userId',
    'postId',
    'post',
    'user',
  ],
  CommentOrderByWithRelationInput: ['id', 'content', 'createdAt', 'updatedAt', 'userId', 'postId', 'post', 'user'],
  CommentWhereUniqueInput: [
    'id',
    'AND',
    'OR',
    'NOT',
    'content',
    'createdAt',
    'updatedAt',
    'userId',
    'postId',
    'post',
    'user',
  ],
  CommentOrderByWithAggregationInput: [
    'id',
    'content',
    'createdAt',
    'updatedAt',
    'userId',
    'postId',
    '_count',
    '_avg',
    '_max',
    '_min',
    '_sum',
  ],
  CommentScalarWhereWithAggregatesInput: [
    'AND',
    'OR',
    'NOT',
    'id',
    'content',
    'createdAt',
    'updatedAt',
    'userId',
    'postId',
  ],
  PostFileWhereInput: ['AND', 'OR', 'NOT', 'id', 'postId', 'fileId', 'createdAt', 'updatedAt', 'file', 'post'],
  PostFileOrderByWithRelationInput: ['id', 'postId', 'fileId', 'createdAt', 'updatedAt', 'file', 'post'],
  PostFileWhereUniqueInput: ['id', 'AND', 'OR', 'NOT', 'postId', 'fileId', 'createdAt', 'updatedAt', 'file', 'post'],
  PostFileOrderByWithAggregationInput: [
    'id',
    'postId',
    'fileId',
    'createdAt',
    'updatedAt',
    '_count',
    '_avg',
    '_max',
    '_min',
    '_sum',
  ],
  PostFileScalarWhereWithAggregatesInput: ['AND', 'OR', 'NOT', 'id', 'postId', 'fileId', 'createdAt', 'updatedAt'],
  FileWhereInput: ['AND', 'OR', 'NOT', 'id', 'location', 'type', 'createdAt', 'updatedAt', 'posts', 'files'],
  FileOrderByWithRelationInput: ['id', 'location', 'type', 'createdAt', 'updatedAt', 'posts', 'files'],
  FileWhereUniqueInput: ['id', 'AND', 'OR', 'NOT', 'location', 'type', 'createdAt', 'updatedAt', 'posts', 'files'],
  FileOrderByWithAggregationInput: [
    'id',
    'location',
    'type',
    'createdAt',
    'updatedAt',
    '_count',
    '_avg',
    '_max',
    '_min',
    '_sum',
  ],
  FileScalarWhereWithAggregatesInput: ['AND', 'OR', 'NOT', 'id', 'location', 'type', 'createdAt', 'updatedAt'],
  AddressWhereInput: [
    'AND',
    'OR',
    'NOT',
    'id',
    'code',
    'c1',
    'c2',
    'c3',
    'c4',
    'createdAt',
    'updatedAt',
    'posts',
    'users',
  ],
  AddressOrderByWithRelationInput: ['id', 'code', 'c1', 'c2', 'c3', 'c4', 'createdAt', 'updatedAt', 'posts', 'users'],
  AddressWhereUniqueInput: [
    'id',
    'code',
    'AND',
    'OR',
    'NOT',
    'c1',
    'c2',
    'c3',
    'c4',
    'createdAt',
    'updatedAt',
    'posts',
    'users',
  ],
  AddressOrderByWithAggregationInput: [
    'id',
    'code',
    'c1',
    'c2',
    'c3',
    'c4',
    'createdAt',
    'updatedAt',
    '_count',
    '_avg',
    '_max',
    '_min',
    '_sum',
  ],
  AddressScalarWhereWithAggregatesInput: [
    'AND',
    'OR',
    'NOT',
    'id',
    'code',
    'c1',
    'c2',
    'c3',
    'c4',
    'createdAt',
    'updatedAt',
  ],
  ChatWhereInput: ['AND', 'OR', 'NOT', 'id', 'name', 'createdAt', 'updatedAt', 'messages', 'users'],
  ChatOrderByWithRelationInput: ['id', 'name', 'createdAt', 'updatedAt', 'messages', 'users'],
  ChatWhereUniqueInput: ['id', 'AND', 'OR', 'NOT', 'name', 'createdAt', 'updatedAt', 'messages', 'users'],
  ChatOrderByWithAggregationInput: ['id', 'name', 'createdAt', 'updatedAt', '_count', '_avg', '_max', '_min', '_sum'],
  ChatScalarWhereWithAggregatesInput: ['AND', 'OR', 'NOT', 'id', 'name', 'createdAt', 'updatedAt'],
  ChatUserWhereInput: ['AND', 'OR', 'NOT', 'id', 'createdAt', 'updatedAt', 'chatId', 'userId', 'chat', 'user'],
  ChatUserOrderByWithRelationInput: ['id', 'createdAt', 'updatedAt', 'chatId', 'userId', 'chat', 'user'],
  ChatUserWhereUniqueInput: ['id', 'AND', 'OR', 'NOT', 'createdAt', 'updatedAt', 'chatId', 'userId', 'chat', 'user'],
  ChatUserOrderByWithAggregationInput: [
    'id',
    'createdAt',
    'updatedAt',
    'chatId',
    'userId',
    '_count',
    '_avg',
    '_max',
    '_min',
    '_sum',
  ],
  ChatUserScalarWhereWithAggregatesInput: ['AND', 'OR', 'NOT', 'id', 'createdAt', 'updatedAt', 'chatId', 'userId'],
  ChatMessageWhereInput: [
    'AND',
    'OR',
    'NOT',
    'id',
    'message',
    'createdAt',
    'updatedAt',
    'chatId',
    'userId',
    'user',
    'chat',
  ],
  ChatMessageOrderByWithRelationInput: ['id', 'message', 'createdAt', 'updatedAt', 'chatId', 'userId', 'user', 'chat'],
  ChatMessageWhereUniqueInput: [
    'id',
    'AND',
    'OR',
    'NOT',
    'message',
    'createdAt',
    'updatedAt',
    'chatId',
    'userId',
    'user',
    'chat',
  ],
  ChatMessageOrderByWithAggregationInput: [
    'id',
    'message',
    'createdAt',
    'updatedAt',
    'chatId',
    'userId',
    '_count',
    '_avg',
    '_max',
    '_min',
    '_sum',
  ],
  ChatMessageScalarWhereWithAggregatesInput: [
    'AND',
    'OR',
    'NOT',
    'id',
    'message',
    'createdAt',
    'updatedAt',
    'chatId',
    'userId',
  ],
  AccountWhereInput: [
    'AND',
    'OR',
    'NOT',
    'type',
    'provider',
    'providerAccountId',
    'refresh_token',
    'access_token',
    'expires_at',
    'token_type',
    'scope',
    'id_token',
    'session_state',
    'createdAt',
    'updatedAt',
    'userId',
    'user',
  ],
  AccountOrderByWithRelationInput: [
    'type',
    'provider',
    'providerAccountId',
    'refresh_token',
    'access_token',
    'expires_at',
    'token_type',
    'scope',
    'id_token',
    'session_state',
    'createdAt',
    'updatedAt',
    'userId',
    'user',
  ],
  AccountWhereUniqueInput: [
    'provider_providerAccountId',
    'AND',
    'OR',
    'NOT',
    'type',
    'provider',
    'providerAccountId',
    'refresh_token',
    'access_token',
    'expires_at',
    'token_type',
    'scope',
    'id_token',
    'session_state',
    'createdAt',
    'updatedAt',
    'userId',
    'user',
  ],
  AccountOrderByWithAggregationInput: [
    'type',
    'provider',
    'providerAccountId',
    'refresh_token',
    'access_token',
    'expires_at',
    'token_type',
    'scope',
    'id_token',
    'session_state',
    'createdAt',
    'updatedAt',
    'userId',
    '_count',
    '_avg',
    '_max',
    '_min',
    '_sum',
  ],
  AccountScalarWhereWithAggregatesInput: [
    'AND',
    'OR',
    'NOT',
    'type',
    'provider',
    'providerAccountId',
    'refresh_token',
    'access_token',
    'expires_at',
    'token_type',
    'scope',
    'id_token',
    'session_state',
    'createdAt',
    'updatedAt',
    'userId',
  ],
  SessionWhereInput: ['AND', 'OR', 'NOT', 'sessionToken', 'expires', 'createdAt', 'updatedAt', 'userId', 'user'],
  SessionOrderByWithRelationInput: ['sessionToken', 'expires', 'createdAt', 'updatedAt', 'userId', 'user'],
  SessionWhereUniqueInput: ['sessionToken', 'AND', 'OR', 'NOT', 'expires', 'createdAt', 'updatedAt', 'userId', 'user'],
  SessionOrderByWithAggregationInput: [
    'sessionToken',
    'expires',
    'createdAt',
    'updatedAt',
    'userId',
    '_count',
    '_avg',
    '_max',
    '_min',
    '_sum',
  ],
  SessionScalarWhereWithAggregatesInput: [
    'AND',
    'OR',
    'NOT',
    'sessionToken',
    'expires',
    'createdAt',
    'updatedAt',
    'userId',
  ],
  VerificationTokenWhereInput: ['AND', 'OR', 'NOT', 'identifier', 'token', 'expires'],
  VerificationTokenOrderByWithRelationInput: ['identifier', 'token', 'expires'],
  VerificationTokenWhereUniqueInput: ['identifier_token', 'AND', 'OR', 'NOT', 'identifier', 'token', 'expires'],
  VerificationTokenOrderByWithAggregationInput: ['identifier', 'token', 'expires', '_count', '_max', '_min'],
  VerificationTokenScalarWhereWithAggregatesInput: ['AND', 'OR', 'NOT', 'identifier', 'token', 'expires'],
  Spatial_ref_sysWhereInput: ['AND', 'OR', 'NOT', 'srid', 'auth_name', 'auth_srid', 'srtext', 'proj4text'],
  Spatial_ref_sysOrderByWithRelationInput: ['srid', 'auth_name', 'auth_srid', 'srtext', 'proj4text'],
  Spatial_ref_sysWhereUniqueInput: ['srid', 'AND', 'OR', 'NOT', 'auth_name', 'auth_srid', 'srtext', 'proj4text'],
  Spatial_ref_sysOrderByWithAggregationInput: [
    'srid',
    'auth_name',
    'auth_srid',
    'srtext',
    'proj4text',
    '_count',
    '_avg',
    '_max',
    '_min',
    '_sum',
  ],
  Spatial_ref_sysScalarWhereWithAggregatesInput: [
    'AND',
    'OR',
    'NOT',
    'srid',
    'auth_name',
    'auth_srid',
    'srtext',
    'proj4text',
  ],
  UserCreateInput: [
    'content',
    'babyBirth',
    'createdAt',
    'updatedAt',
    'email',
    'emailVerified',
    'image',
    'name',
    'username',
    'role',
    'accounts',
    'chats',
    'comments',
    'posts',
    'sessions',
    'addresses',
    'files',
    'chatMessages',
  ],
  UserUpdateInput: [
    'content',
    'babyBirth',
    'createdAt',
    'updatedAt',
    'email',
    'emailVerified',
    'image',
    'name',
    'username',
    'role',
    'accounts',
    'chats',
    'comments',
    'posts',
    'sessions',
    'addresses',
    'files',
    'chatMessages',
  ],
  UserCreateManyInput: [
    'id',
    'content',
    'babyBirth',
    'createdAt',
    'updatedAt',
    'email',
    'emailVerified',
    'image',
    'name',
    'username',
    'role',
  ],
  UserUpdateManyMutationInput: [
    'content',
    'babyBirth',
    'createdAt',
    'updatedAt',
    'email',
    'emailVerified',
    'image',
    'name',
    'username',
    'role',
  ],
  UserFileCreateInput: ['createdAt', 'updatedAt', 'file', 'user'],
  UserFileUpdateInput: ['createdAt', 'updatedAt', 'file', 'user'],
  UserFileCreateManyInput: ['id', 'userId', 'fileId', 'createdAt', 'updatedAt'],
  UserFileUpdateManyMutationInput: ['createdAt', 'updatedAt'],
  UserAddressCreateInput: ['createdAt', 'updatedAt', 'address', 'user'],
  UserAddressUpdateInput: ['createdAt', 'updatedAt', 'address', 'user'],
  UserAddressCreateManyInput: ['id', 'userId', 'addressId', 'createdAt', 'updatedAt'],
  UserAddressUpdateManyMutationInput: ['createdAt', 'updatedAt'],
  PostCreateInput: ['content', 'createdAt', 'updatedAt', 'comments', 'files', 'address', 'user'],
  PostUpdateInput: ['content', 'createdAt', 'updatedAt', 'comments', 'files', 'address', 'user'],
  PostCreateManyInput: ['id', 'content', 'addressId', 'createdAt', 'updatedAt', 'userId'],
  PostUpdateManyMutationInput: ['content', 'createdAt', 'updatedAt'],
  CommentCreateInput: ['content', 'createdAt', 'updatedAt', 'post', 'user'],
  CommentUpdateInput: ['content', 'createdAt', 'updatedAt', 'post', 'user'],
  CommentCreateManyInput: ['id', 'content', 'createdAt', 'updatedAt', 'userId', 'postId'],
  CommentUpdateManyMutationInput: ['content', 'createdAt', 'updatedAt'],
  PostFileCreateInput: ['createdAt', 'updatedAt', 'file', 'post'],
  PostFileUpdateInput: ['createdAt', 'updatedAt', 'file', 'post'],
  PostFileCreateManyInput: ['id', 'postId', 'fileId', 'createdAt', 'updatedAt'],
  PostFileUpdateManyMutationInput: ['createdAt', 'updatedAt'],
  FileCreateInput: ['location', 'type', 'createdAt', 'updatedAt', 'posts', 'files'],
  FileUpdateInput: ['location', 'type', 'createdAt', 'updatedAt', 'posts', 'files'],
  FileCreateManyInput: ['id', 'location', 'type', 'createdAt', 'updatedAt'],
  FileUpdateManyMutationInput: ['location', 'type', 'createdAt', 'updatedAt'],
  AddressUpdateInput: ['code', 'c1', 'c2', 'c3', 'c4', 'createdAt', 'updatedAt', 'posts', 'users'],
  AddressUpdateManyMutationInput: ['code', 'c1', 'c2', 'c3', 'c4', 'createdAt', 'updatedAt'],
  ChatCreateInput: ['name', 'createdAt', 'updatedAt', 'messages', 'users'],
  ChatUpdateInput: ['name', 'createdAt', 'updatedAt', 'messages', 'users'],
  ChatCreateManyInput: ['id', 'name', 'createdAt', 'updatedAt'],
  ChatUpdateManyMutationInput: ['name', 'createdAt', 'updatedAt'],
  ChatUserCreateInput: ['createdAt', 'updatedAt', 'chat', 'user'],
  ChatUserUpdateInput: ['createdAt', 'updatedAt', 'chat', 'user'],
  ChatUserCreateManyInput: ['id', 'createdAt', 'updatedAt', 'chatId', 'userId'],
  ChatUserUpdateManyMutationInput: ['createdAt', 'updatedAt'],
  ChatMessageCreateInput: ['message', 'createdAt', 'updatedAt', 'user', 'chat'],
  ChatMessageUpdateInput: ['message', 'createdAt', 'updatedAt', 'user', 'chat'],
  ChatMessageCreateManyInput: ['id', 'message', 'createdAt', 'updatedAt', 'chatId', 'userId'],
  ChatMessageUpdateManyMutationInput: ['message', 'createdAt', 'updatedAt'],
  AccountCreateInput: [
    'type',
    'provider',
    'providerAccountId',
    'refresh_token',
    'access_token',
    'expires_at',
    'token_type',
    'scope',
    'id_token',
    'session_state',
    'createdAt',
    'updatedAt',
    'user',
  ],
  AccountUpdateInput: [
    'type',
    'provider',
    'providerAccountId',
    'refresh_token',
    'access_token',
    'expires_at',
    'token_type',
    'scope',
    'id_token',
    'session_state',
    'createdAt',
    'updatedAt',
    'user',
  ],
  AccountCreateManyInput: [
    'type',
    'provider',
    'providerAccountId',
    'refresh_token',
    'access_token',
    'expires_at',
    'token_type',
    'scope',
    'id_token',
    'session_state',
    'createdAt',
    'updatedAt',
    'userId',
  ],
  AccountUpdateManyMutationInput: [
    'type',
    'provider',
    'providerAccountId',
    'refresh_token',
    'access_token',
    'expires_at',
    'token_type',
    'scope',
    'id_token',
    'session_state',
    'createdAt',
    'updatedAt',
  ],
  SessionCreateInput: ['sessionToken', 'expires', 'createdAt', 'updatedAt', 'user'],
  SessionUpdateInput: ['sessionToken', 'expires', 'createdAt', 'updatedAt', 'user'],
  SessionCreateManyInput: ['sessionToken', 'expires', 'createdAt', 'updatedAt', 'userId'],
  SessionUpdateManyMutationInput: ['sessionToken', 'expires', 'createdAt', 'updatedAt'],
  VerificationTokenCreateInput: ['identifier', 'token', 'expires'],
  VerificationTokenUpdateInput: ['identifier', 'token', 'expires'],
  VerificationTokenCreateManyInput: ['identifier', 'token', 'expires'],
  VerificationTokenUpdateManyMutationInput: ['identifier', 'token', 'expires'],
  Spatial_ref_sysCreateInput: ['srid', 'auth_name', 'auth_srid', 'srtext', 'proj4text'],
  Spatial_ref_sysUpdateInput: ['srid', 'auth_name', 'auth_srid', 'srtext', 'proj4text'],
  Spatial_ref_sysCreateManyInput: ['srid', 'auth_name', 'auth_srid', 'srtext', 'proj4text'],
  Spatial_ref_sysUpdateManyMutationInput: ['srid', 'auth_name', 'auth_srid', 'srtext', 'proj4text'],
  IntFilter: ['equals', 'in', 'notIn', 'lt', 'lte', 'gt', 'gte', 'not'],
  StringNullableFilter: [
    'equals',
    'in',
    'notIn',
    'lt',
    'lte',
    'gt',
    'gte',
    'contains',
    'startsWith',
    'endsWith',
    'mode',
    'not',
  ],
  DateTimeNullableFilter: ['equals', 'in', 'notIn', 'lt', 'lte', 'gt', 'gte', 'not'],
  DateTimeFilter: ['equals', 'in', 'notIn', 'lt', 'lte', 'gt', 'gte', 'not'],
  StringFilter: [
    'equals',
    'in',
    'notIn',
    'lt',
    'lte',
    'gt',
    'gte',
    'contains',
    'startsWith',
    'endsWith',
    'mode',
    'not',
  ],
  EnumRoleFilter: ['equals', 'in', 'notIn', 'not'],
  AccountListRelationFilter: ['every', 'some', 'none'],
  ChatUserListRelationFilter: ['every', 'some', 'none'],
  CommentListRelationFilter: ['every', 'some', 'none'],
  PostListRelationFilter: ['every', 'some', 'none'],
  SessionListRelationFilter: ['every', 'some', 'none'],
  UserAddressListRelationFilter: ['every', 'some', 'none'],
  UserFileListRelationFilter: ['every', 'some', 'none'],
  ChatMessageListRelationFilter: ['every', 'some', 'none'],
  SortOrderInput: ['sort', 'nulls'],
  AccountOrderByRelationAggregateInput: ['_count'],
  ChatUserOrderByRelationAggregateInput: ['_count'],
  CommentOrderByRelationAggregateInput: ['_count'],
  PostOrderByRelationAggregateInput: ['_count'],
  SessionOrderByRelationAggregateInput: ['_count'],
  UserAddressOrderByRelationAggregateInput: ['_count'],
  UserFileOrderByRelationAggregateInput: ['_count'],
  ChatMessageOrderByRelationAggregateInput: ['_count'],
  UserCountOrderByAggregateInput: [
    'id',
    'content',
    'babyBirth',
    'createdAt',
    'updatedAt',
    'email',
    'emailVerified',
    'image',
    'name',
    'username',
    'role',
  ],
  UserAvgOrderByAggregateInput: ['id'],
  UserMaxOrderByAggregateInput: [
    'id',
    'content',
    'babyBirth',
    'createdAt',
    'updatedAt',
    'email',
    'emailVerified',
    'image',
    'name',
    'username',
    'role',
  ],
  UserMinOrderByAggregateInput: [
    'id',
    'content',
    'babyBirth',
    'createdAt',
    'updatedAt',
    'email',
    'emailVerified',
    'image',
    'name',
    'username',
    'role',
  ],
  UserSumOrderByAggregateInput: ['id'],
  IntWithAggregatesFilter: [
    'equals',
    'in',
    'notIn',
    'lt',
    'lte',
    'gt',
    'gte',
    'not',
    '_count',
    '_avg',
    '_sum',
    '_min',
    '_max',
  ],
  StringNullableWithAggregatesFilter: [
    'equals',
    'in',
    'notIn',
    'lt',
    'lte',
    'gt',
    'gte',
    'contains',
    'startsWith',
    'endsWith',
    'mode',
    'not',
    '_count',
    '_min',
    '_max',
  ],
  DateTimeNullableWithAggregatesFilter: [
    'equals',
    'in',
    'notIn',
    'lt',
    'lte',
    'gt',
    'gte',
    'not',
    '_count',
    '_min',
    '_max',
  ],
  DateTimeWithAggregatesFilter: ['equals', 'in', 'notIn', 'lt', 'lte', 'gt', 'gte', 'not', '_count', '_min', '_max'],
  StringWithAggregatesFilter: [
    'equals',
    'in',
    'notIn',
    'lt',
    'lte',
    'gt',
    'gte',
    'contains',
    'startsWith',
    'endsWith',
    'mode',
    'not',
    '_count',
    '_min',
    '_max',
  ],
  EnumRoleWithAggregatesFilter: ['equals', 'in', 'notIn', 'not', '_count', '_min', '_max'],
  FileRelationFilter: ['is', 'isNot'],
  UserRelationFilter: ['is', 'isNot'],
  UserFileCountOrderByAggregateInput: ['id', 'userId', 'fileId', 'createdAt', 'updatedAt'],
  UserFileAvgOrderByAggregateInput: ['id', 'userId', 'fileId'],
  UserFileMaxOrderByAggregateInput: ['id', 'userId', 'fileId', 'createdAt', 'updatedAt'],
  UserFileMinOrderByAggregateInput: ['id', 'userId', 'fileId', 'createdAt', 'updatedAt'],
  UserFileSumOrderByAggregateInput: ['id', 'userId', 'fileId'],
  AddressRelationFilter: ['is', 'isNot'],
  UserAddressCountOrderByAggregateInput: ['id', 'userId', 'addressId', 'createdAt', 'updatedAt'],
  UserAddressAvgOrderByAggregateInput: ['id', 'userId', 'addressId'],
  UserAddressMaxOrderByAggregateInput: ['id', 'userId', 'addressId', 'createdAt', 'updatedAt'],
  UserAddressMinOrderByAggregateInput: ['id', 'userId', 'addressId', 'createdAt', 'updatedAt'],
  UserAddressSumOrderByAggregateInput: ['id', 'userId', 'addressId'],
  PostFileListRelationFilter: ['every', 'some', 'none'],
  PostFileOrderByRelationAggregateInput: ['_count'],
  PostCountOrderByAggregateInput: ['id', 'content', 'addressId', 'createdAt', 'updatedAt', 'userId'],
  PostAvgOrderByAggregateInput: ['id', 'addressId', 'userId'],
  PostMaxOrderByAggregateInput: ['id', 'content', 'addressId', 'createdAt', 'updatedAt', 'userId'],
  PostMinOrderByAggregateInput: ['id', 'content', 'addressId', 'createdAt', 'updatedAt', 'userId'],
  PostSumOrderByAggregateInput: ['id', 'addressId', 'userId'],
  PostRelationFilter: ['is', 'isNot'],
  CommentCountOrderByAggregateInput: ['id', 'content', 'createdAt', 'updatedAt', 'userId', 'postId'],
  CommentAvgOrderByAggregateInput: ['id', 'userId', 'postId'],
  CommentMaxOrderByAggregateInput: ['id', 'content', 'createdAt', 'updatedAt', 'userId', 'postId'],
  CommentMinOrderByAggregateInput: ['id', 'content', 'createdAt', 'updatedAt', 'userId', 'postId'],
  CommentSumOrderByAggregateInput: ['id', 'userId', 'postId'],
  PostFileCountOrderByAggregateInput: ['id', 'postId', 'fileId', 'createdAt', 'updatedAt'],
  PostFileAvgOrderByAggregateInput: ['id', 'postId', 'fileId'],
  PostFileMaxOrderByAggregateInput: ['id', 'postId', 'fileId', 'createdAt', 'updatedAt'],
  PostFileMinOrderByAggregateInput: ['id', 'postId', 'fileId', 'createdAt', 'updatedAt'],
  PostFileSumOrderByAggregateInput: ['id', 'postId', 'fileId'],
  EnumFileStorageTypeFilter: ['equals', 'in', 'notIn', 'not'],
  FileCountOrderByAggregateInput: ['id', 'location', 'type', 'createdAt', 'updatedAt'],
  FileAvgOrderByAggregateInput: ['id'],
  FileMaxOrderByAggregateInput: ['id', 'location', 'type', 'createdAt', 'updatedAt'],
  FileMinOrderByAggregateInput: ['id', 'location', 'type', 'createdAt', 'updatedAt'],
  FileSumOrderByAggregateInput: ['id'],
  EnumFileStorageTypeWithAggregatesFilter: ['equals', 'in', 'notIn', 'not', '_count', '_min', '_max'],
  AddressCountOrderByAggregateInput: ['id', 'code', 'c1', 'c2', 'c3', 'c4', 'createdAt', 'updatedAt'],
  AddressAvgOrderByAggregateInput: ['id'],
  AddressMaxOrderByAggregateInput: ['id', 'code', 'c1', 'c2', 'c3', 'c4', 'createdAt', 'updatedAt'],
  AddressMinOrderByAggregateInput: ['id', 'code', 'c1', 'c2', 'c3', 'c4', 'createdAt', 'updatedAt'],
  AddressSumOrderByAggregateInput: ['id'],
  ChatCountOrderByAggregateInput: ['id', 'name', 'createdAt', 'updatedAt'],
  ChatAvgOrderByAggregateInput: ['id'],
  ChatMaxOrderByAggregateInput: ['id', 'name', 'createdAt', 'updatedAt'],
  ChatMinOrderByAggregateInput: ['id', 'name', 'createdAt', 'updatedAt'],
  ChatSumOrderByAggregateInput: ['id'],
  ChatRelationFilter: ['is', 'isNot'],
  ChatUserCountOrderByAggregateInput: ['id', 'createdAt', 'updatedAt', 'chatId', 'userId'],
  ChatUserAvgOrderByAggregateInput: ['id', 'chatId', 'userId'],
  ChatUserMaxOrderByAggregateInput: ['id', 'createdAt', 'updatedAt', 'chatId', 'userId'],
  ChatUserMinOrderByAggregateInput: ['id', 'createdAt', 'updatedAt', 'chatId', 'userId'],
  ChatUserSumOrderByAggregateInput: ['id', 'chatId', 'userId'],
  ChatMessageCountOrderByAggregateInput: ['id', 'message', 'createdAt', 'updatedAt', 'chatId', 'userId'],
  ChatMessageAvgOrderByAggregateInput: ['id', 'chatId', 'userId'],
  ChatMessageMaxOrderByAggregateInput: ['id', 'message', 'createdAt', 'updatedAt', 'chatId', 'userId'],
  ChatMessageMinOrderByAggregateInput: ['id', 'message', 'createdAt', 'updatedAt', 'chatId', 'userId'],
  ChatMessageSumOrderByAggregateInput: ['id', 'chatId', 'userId'],
  IntNullableFilter: ['equals', 'in', 'notIn', 'lt', 'lte', 'gt', 'gte', 'not'],
  AccountProviderProviderAccountIdCompoundUniqueInput: ['provider', 'providerAccountId'],
  AccountCountOrderByAggregateInput: [
    'type',
    'provider',
    'providerAccountId',
    'refresh_token',
    'access_token',
    'expires_at',
    'token_type',
    'scope',
    'id_token',
    'session_state',
    'createdAt',
    'updatedAt',
    'userId',
  ],
  AccountAvgOrderByAggregateInput: ['expires_at', 'userId'],
  AccountMaxOrderByAggregateInput: [
    'type',
    'provider',
    'providerAccountId',
    'refresh_token',
    'access_token',
    'expires_at',
    'token_type',
    'scope',
    'id_token',
    'session_state',
    'createdAt',
    'updatedAt',
    'userId',
  ],
  AccountMinOrderByAggregateInput: [
    'type',
    'provider',
    'providerAccountId',
    'refresh_token',
    'access_token',
    'expires_at',
    'token_type',
    'scope',
    'id_token',
    'session_state',
    'createdAt',
    'updatedAt',
    'userId',
  ],
  AccountSumOrderByAggregateInput: ['expires_at', 'userId'],
  IntNullableWithAggregatesFilter: [
    'equals',
    'in',
    'notIn',
    'lt',
    'lte',
    'gt',
    'gte',
    'not',
    '_count',
    '_avg',
    '_sum',
    '_min',
    '_max',
  ],
  SessionCountOrderByAggregateInput: ['sessionToken', 'expires', 'createdAt', 'updatedAt', 'userId'],
  SessionAvgOrderByAggregateInput: ['userId'],
  SessionMaxOrderByAggregateInput: ['sessionToken', 'expires', 'createdAt', 'updatedAt', 'userId'],
  SessionMinOrderByAggregateInput: ['sessionToken', 'expires', 'createdAt', 'updatedAt', 'userId'],
  SessionSumOrderByAggregateInput: ['userId'],
  VerificationTokenIdentifierTokenCompoundUniqueInput: ['identifier', 'token'],
  VerificationTokenCountOrderByAggregateInput: ['identifier', 'token', 'expires'],
  VerificationTokenMaxOrderByAggregateInput: ['identifier', 'token', 'expires'],
  VerificationTokenMinOrderByAggregateInput: ['identifier', 'token', 'expires'],
  Spatial_ref_sysCountOrderByAggregateInput: ['srid', 'auth_name', 'auth_srid', 'srtext', 'proj4text'],
  Spatial_ref_sysAvgOrderByAggregateInput: ['srid', 'auth_srid'],
  Spatial_ref_sysMaxOrderByAggregateInput: ['srid', 'auth_name', 'auth_srid', 'srtext', 'proj4text'],
  Spatial_ref_sysMinOrderByAggregateInput: ['srid', 'auth_name', 'auth_srid', 'srtext', 'proj4text'],
  Spatial_ref_sysSumOrderByAggregateInput: ['srid', 'auth_srid'],
  AccountCreateNestedManyWithoutUserInput: ['create', 'connectOrCreate', 'createMany', 'connect'],
  ChatUserCreateNestedManyWithoutUserInput: ['create', 'connectOrCreate', 'createMany', 'connect'],
  CommentCreateNestedManyWithoutUserInput: ['create', 'connectOrCreate', 'createMany', 'connect'],
  PostCreateNestedManyWithoutUserInput: ['create', 'connectOrCreate', 'createMany', 'connect'],
  SessionCreateNestedManyWithoutUserInput: ['create', 'connectOrCreate', 'createMany', 'connect'],
  UserAddressCreateNestedManyWithoutUserInput: ['create', 'connectOrCreate', 'createMany', 'connect'],
  UserFileCreateNestedManyWithoutUserInput: ['create', 'connectOrCreate', 'createMany', 'connect'],
  ChatMessageCreateNestedManyWithoutUserInput: ['create', 'connectOrCreate', 'createMany', 'connect'],
  NullableStringFieldUpdateOperationsInput: ['set'],
  NullableDateTimeFieldUpdateOperationsInput: ['set'],
  DateTimeFieldUpdateOperationsInput: ['set'],
  StringFieldUpdateOperationsInput: ['set'],
  EnumRoleFieldUpdateOperationsInput: ['set'],
  AccountUpdateManyWithoutUserNestedInput: [
    'create',
    'connectOrCreate',
    'upsert',
    'createMany',
    'set',
    'disconnect',
    'delete',
    'connect',
    'update',
    'updateMany',
    'deleteMany',
  ],
  ChatUserUpdateManyWithoutUserNestedInput: [
    'create',
    'connectOrCreate',
    'upsert',
    'createMany',
    'set',
    'disconnect',
    'delete',
    'connect',
    'update',
    'updateMany',
    'deleteMany',
  ],
  CommentUpdateManyWithoutUserNestedInput: [
    'create',
    'connectOrCreate',
    'upsert',
    'createMany',
    'set',
    'disconnect',
    'delete',
    'connect',
    'update',
    'updateMany',
    'deleteMany',
  ],
  PostUpdateManyWithoutUserNestedInput: [
    'create',
    'connectOrCreate',
    'upsert',
    'createMany',
    'set',
    'disconnect',
    'delete',
    'connect',
    'update',
    'updateMany',
    'deleteMany',
  ],
  SessionUpdateManyWithoutUserNestedInput: [
    'create',
    'connectOrCreate',
    'upsert',
    'createMany',
    'set',
    'disconnect',
    'delete',
    'connect',
    'update',
    'updateMany',
    'deleteMany',
  ],
  UserAddressUpdateManyWithoutUserNestedInput: [
    'create',
    'connectOrCreate',
    'upsert',
    'createMany',
    'set',
    'disconnect',
    'delete',
    'connect',
    'update',
    'updateMany',
    'deleteMany',
  ],
  UserFileUpdateManyWithoutUserNestedInput: [
    'create',
    'connectOrCreate',
    'upsert',
    'createMany',
    'set',
    'disconnect',
    'delete',
    'connect',
    'update',
    'updateMany',
    'deleteMany',
  ],
  ChatMessageUpdateManyWithoutUserNestedInput: [
    'create',
    'connectOrCreate',
    'upsert',
    'createMany',
    'set',
    'disconnect',
    'delete',
    'connect',
    'update',
    'updateMany',
    'deleteMany',
  ],
  IntFieldUpdateOperationsInput: ['set', 'increment', 'decrement', 'multiply', 'divide'],
  FileCreateNestedOneWithoutFilesInput: ['create', 'connectOrCreate', 'connect'],
  UserCreateNestedOneWithoutFilesInput: ['create', 'connectOrCreate', 'connect'],
  FileUpdateOneRequiredWithoutFilesNestedInput: ['create', 'connectOrCreate', 'upsert', 'connect', 'update'],
  UserUpdateOneRequiredWithoutFilesNestedInput: ['create', 'connectOrCreate', 'upsert', 'connect', 'update'],
  AddressCreateNestedOneWithoutUsersInput: ['connect'],
  UserCreateNestedOneWithoutAddressesInput: ['create', 'connectOrCreate', 'connect'],
  AddressUpdateOneRequiredWithoutUsersNestedInput: ['connect', 'update'],
  UserUpdateOneRequiredWithoutAddressesNestedInput: ['create', 'connectOrCreate', 'upsert', 'connect', 'update'],
  CommentCreateNestedManyWithoutPostInput: ['create', 'connectOrCreate', 'createMany', 'connect'],
  PostFileCreateNestedManyWithoutPostInput: ['create', 'connectOrCreate', 'createMany', 'connect'],
  AddressCreateNestedOneWithoutPostsInput: ['connect'],
  UserCreateNestedOneWithoutPostsInput: ['create', 'connectOrCreate', 'connect'],
  CommentUpdateManyWithoutPostNestedInput: [
    'create',
    'connectOrCreate',
    'upsert',
    'createMany',
    'set',
    'disconnect',
    'delete',
    'connect',
    'update',
    'updateMany',
    'deleteMany',
  ],
  PostFileUpdateManyWithoutPostNestedInput: [
    'create',
    'connectOrCreate',
    'upsert',
    'createMany',
    'set',
    'disconnect',
    'delete',
    'connect',
    'update',
    'updateMany',
    'deleteMany',
  ],
  AddressUpdateOneRequiredWithoutPostsNestedInput: ['connect', 'update'],
  UserUpdateOneRequiredWithoutPostsNestedInput: ['create', 'connectOrCreate', 'upsert', 'connect', 'update'],
  PostCreateNestedOneWithoutCommentsInput: ['create', 'connectOrCreate', 'connect'],
  UserCreateNestedOneWithoutCommentsInput: ['create', 'connectOrCreate', 'connect'],
  PostUpdateOneRequiredWithoutCommentsNestedInput: ['create', 'connectOrCreate', 'upsert', 'connect', 'update'],
  UserUpdateOneRequiredWithoutCommentsNestedInput: ['create', 'connectOrCreate', 'upsert', 'connect', 'update'],
  FileCreateNestedOneWithoutPostsInput: ['create', 'connectOrCreate', 'connect'],
  PostCreateNestedOneWithoutFilesInput: ['create', 'connectOrCreate', 'connect'],
  FileUpdateOneRequiredWithoutPostsNestedInput: ['create', 'connectOrCreate', 'upsert', 'connect', 'update'],
  PostUpdateOneRequiredWithoutFilesNestedInput: ['create', 'connectOrCreate', 'upsert', 'connect', 'update'],
  PostFileCreateNestedManyWithoutFileInput: ['create', 'connectOrCreate', 'createMany', 'connect'],
  UserFileCreateNestedManyWithoutFileInput: ['create', 'connectOrCreate', 'createMany', 'connect'],
  EnumFileStorageTypeFieldUpdateOperationsInput: ['set'],
  PostFileUpdateManyWithoutFileNestedInput: [
    'create',
    'connectOrCreate',
    'upsert',
    'createMany',
    'set',
    'disconnect',
    'delete',
    'connect',
    'update',
    'updateMany',
    'deleteMany',
  ],
  UserFileUpdateManyWithoutFileNestedInput: [
    'create',
    'connectOrCreate',
    'upsert',
    'createMany',
    'set',
    'disconnect',
    'delete',
    'connect',
    'update',
    'updateMany',
    'deleteMany',
  ],
  PostUpdateManyWithoutAddressNestedInput: [
    'create',
    'connectOrCreate',
    'upsert',
    'createMany',
    'set',
    'disconnect',
    'delete',
    'connect',
    'update',
    'updateMany',
    'deleteMany',
  ],
  UserAddressUpdateManyWithoutAddressNestedInput: [
    'create',
    'connectOrCreate',
    'upsert',
    'createMany',
    'set',
    'disconnect',
    'delete',
    'connect',
    'update',
    'updateMany',
    'deleteMany',
  ],
  ChatMessageCreateNestedManyWithoutChatInput: ['create', 'connectOrCreate', 'createMany', 'connect'],
  ChatUserCreateNestedManyWithoutChatInput: ['create', 'connectOrCreate', 'createMany', 'connect'],
  ChatMessageUpdateManyWithoutChatNestedInput: [
    'create',
    'connectOrCreate',
    'upsert',
    'createMany',
    'set',
    'disconnect',
    'delete',
    'connect',
    'update',
    'updateMany',
    'deleteMany',
  ],
  ChatUserUpdateManyWithoutChatNestedInput: [
    'create',
    'connectOrCreate',
    'upsert',
    'createMany',
    'set',
    'disconnect',
    'delete',
    'connect',
    'update',
    'updateMany',
    'deleteMany',
  ],
  ChatCreateNestedOneWithoutUsersInput: ['create', 'connectOrCreate', 'connect'],
  UserCreateNestedOneWithoutChatsInput: ['create', 'connectOrCreate', 'connect'],
  ChatUpdateOneRequiredWithoutUsersNestedInput: ['create', 'connectOrCreate', 'upsert', 'connect', 'update'],
  UserUpdateOneRequiredWithoutChatsNestedInput: ['create', 'connectOrCreate', 'upsert', 'connect', 'update'],
  UserCreateNestedOneWithoutChatMessagesInput: ['create', 'connectOrCreate', 'connect'],
  ChatCreateNestedOneWithoutMessagesInput: ['create', 'connectOrCreate', 'connect'],
  UserUpdateOneRequiredWithoutChatMessagesNestedInput: ['create', 'connectOrCreate', 'upsert', 'connect', 'update'],
  ChatUpdateOneRequiredWithoutMessagesNestedInput: ['create', 'connectOrCreate', 'upsert', 'connect', 'update'],
  UserCreateNestedOneWithoutAccountsInput: ['create', 'connectOrCreate', 'connect'],
  NullableIntFieldUpdateOperationsInput: ['set', 'increment', 'decrement', 'multiply', 'divide'],
  UserUpdateOneRequiredWithoutAccountsNestedInput: ['create', 'connectOrCreate', 'upsert', 'connect', 'update'],
  UserCreateNestedOneWithoutSessionsInput: ['create', 'connectOrCreate', 'connect'],
  UserUpdateOneRequiredWithoutSessionsNestedInput: ['create', 'connectOrCreate', 'upsert', 'connect', 'update'],
  NestedIntFilter: ['equals', 'in', 'notIn', 'lt', 'lte', 'gt', 'gte', 'not'],
  NestedStringNullableFilter: [
    'equals',
    'in',
    'notIn',
    'lt',
    'lte',
    'gt',
    'gte',
    'contains',
    'startsWith',
    'endsWith',
    'not',
  ],
  NestedDateTimeNullableFilter: ['equals', 'in', 'notIn', 'lt', 'lte', 'gt', 'gte', 'not'],
  NestedDateTimeFilter: ['equals', 'in', 'notIn', 'lt', 'lte', 'gt', 'gte', 'not'],
  NestedStringFilter: ['equals', 'in', 'notIn', 'lt', 'lte', 'gt', 'gte', 'contains', 'startsWith', 'endsWith', 'not'],
  NestedEnumRoleFilter: ['equals', 'in', 'notIn', 'not'],
  NestedIntWithAggregatesFilter: [
    'equals',
    'in',
    'notIn',
    'lt',
    'lte',
    'gt',
    'gte',
    'not',
    '_count',
    '_avg',
    '_sum',
    '_min',
    '_max',
  ],
  NestedFloatFilter: ['equals', 'in', 'notIn', 'lt', 'lte', 'gt', 'gte', 'not'],
  NestedStringNullableWithAggregatesFilter: [
    'equals',
    'in',
    'notIn',
    'lt',
    'lte',
    'gt',
    'gte',
    'contains',
    'startsWith',
    'endsWith',
    'not',
    '_count',
    '_min',
    '_max',
  ],
  NestedIntNullableFilter: ['equals', 'in', 'notIn', 'lt', 'lte', 'gt', 'gte', 'not'],
  NestedDateTimeNullableWithAggregatesFilter: [
    'equals',
    'in',
    'notIn',
    'lt',
    'lte',
    'gt',
    'gte',
    'not',
    '_count',
    '_min',
    '_max',
  ],
  NestedDateTimeWithAggregatesFilter: [
    'equals',
    'in',
    'notIn',
    'lt',
    'lte',
    'gt',
    'gte',
    'not',
    '_count',
    '_min',
    '_max',
  ],
  NestedStringWithAggregatesFilter: [
    'equals',
    'in',
    'notIn',
    'lt',
    'lte',
    'gt',
    'gte',
    'contains',
    'startsWith',
    'endsWith',
    'not',
    '_count',
    '_min',
    '_max',
  ],
  NestedEnumRoleWithAggregatesFilter: ['equals', 'in', 'notIn', 'not', '_count', '_min', '_max'],
  NestedEnumFileStorageTypeFilter: ['equals', 'in', 'notIn', 'not'],
  NestedEnumFileStorageTypeWithAggregatesFilter: ['equals', 'in', 'notIn', 'not', '_count', '_min', '_max'],
  NestedIntNullableWithAggregatesFilter: [
    'equals',
    'in',
    'notIn',
    'lt',
    'lte',
    'gt',
    'gte',
    'not',
    '_count',
    '_avg',
    '_sum',
    '_min',
    '_max',
  ],
  NestedFloatNullableFilter: ['equals', 'in', 'notIn', 'lt', 'lte', 'gt', 'gte', 'not'],
  AccountCreateWithoutUserInput: [
    'type',
    'provider',
    'providerAccountId',
    'refresh_token',
    'access_token',
    'expires_at',
    'token_type',
    'scope',
    'id_token',
    'session_state',
    'createdAt',
    'updatedAt',
  ],
  AccountCreateOrConnectWithoutUserInput: ['where', 'create'],
  AccountCreateManyUserInputEnvelope: ['data', 'skipDuplicates'],
  ChatUserCreateWithoutUserInput: ['createdAt', 'updatedAt', 'chat'],
  ChatUserCreateOrConnectWithoutUserInput: ['where', 'create'],
  ChatUserCreateManyUserInputEnvelope: ['data', 'skipDuplicates'],
  CommentCreateWithoutUserInput: ['content', 'createdAt', 'updatedAt', 'post'],
  CommentCreateOrConnectWithoutUserInput: ['where', 'create'],
  CommentCreateManyUserInputEnvelope: ['data', 'skipDuplicates'],
  PostCreateWithoutUserInput: ['content', 'createdAt', 'updatedAt', 'comments', 'files', 'address'],
  PostCreateOrConnectWithoutUserInput: ['where', 'create'],
  PostCreateManyUserInputEnvelope: ['data', 'skipDuplicates'],
  SessionCreateWithoutUserInput: ['sessionToken', 'expires', 'createdAt', 'updatedAt'],
  SessionCreateOrConnectWithoutUserInput: ['where', 'create'],
  SessionCreateManyUserInputEnvelope: ['data', 'skipDuplicates'],
  UserAddressCreateWithoutUserInput: ['createdAt', 'updatedAt', 'address'],
  UserAddressCreateOrConnectWithoutUserInput: ['where', 'create'],
  UserAddressCreateManyUserInputEnvelope: ['data', 'skipDuplicates'],
  UserFileCreateWithoutUserInput: ['createdAt', 'updatedAt', 'file'],
  UserFileCreateOrConnectWithoutUserInput: ['where', 'create'],
  UserFileCreateManyUserInputEnvelope: ['data', 'skipDuplicates'],
  ChatMessageCreateWithoutUserInput: ['message', 'createdAt', 'updatedAt', 'chat'],
  ChatMessageCreateOrConnectWithoutUserInput: ['where', 'create'],
  ChatMessageCreateManyUserInputEnvelope: ['data', 'skipDuplicates'],
  AccountUpsertWithWhereUniqueWithoutUserInput: ['where', 'update', 'create'],
  AccountUpdateWithWhereUniqueWithoutUserInput: ['where', 'data'],
  AccountUpdateManyWithWhereWithoutUserInput: ['where', 'data'],
  AccountScalarWhereInput: [
    'AND',
    'OR',
    'NOT',
    'type',
    'provider',
    'providerAccountId',
    'refresh_token',
    'access_token',
    'expires_at',
    'token_type',
    'scope',
    'id_token',
    'session_state',
    'createdAt',
    'updatedAt',
    'userId',
  ],
  ChatUserUpsertWithWhereUniqueWithoutUserInput: ['where', 'update', 'create'],
  ChatUserUpdateWithWhereUniqueWithoutUserInput: ['where', 'data'],
  ChatUserUpdateManyWithWhereWithoutUserInput: ['where', 'data'],
  ChatUserScalarWhereInput: ['AND', 'OR', 'NOT', 'id', 'createdAt', 'updatedAt', 'chatId', 'userId'],
  CommentUpsertWithWhereUniqueWithoutUserInput: ['where', 'update', 'create'],
  CommentUpdateWithWhereUniqueWithoutUserInput: ['where', 'data'],
  CommentUpdateManyWithWhereWithoutUserInput: ['where', 'data'],
  CommentScalarWhereInput: ['AND', 'OR', 'NOT', 'id', 'content', 'createdAt', 'updatedAt', 'userId', 'postId'],
  PostUpsertWithWhereUniqueWithoutUserInput: ['where', 'update', 'create'],
  PostUpdateWithWhereUniqueWithoutUserInput: ['where', 'data'],
  PostUpdateManyWithWhereWithoutUserInput: ['where', 'data'],
  PostScalarWhereInput: ['AND', 'OR', 'NOT', 'id', 'content', 'addressId', 'createdAt', 'updatedAt', 'userId'],
  SessionUpsertWithWhereUniqueWithoutUserInput: ['where', 'update', 'create'],
  SessionUpdateWithWhereUniqueWithoutUserInput: ['where', 'data'],
  SessionUpdateManyWithWhereWithoutUserInput: ['where', 'data'],
  SessionScalarWhereInput: ['AND', 'OR', 'NOT', 'sessionToken', 'expires', 'createdAt', 'updatedAt', 'userId'],
  UserAddressUpsertWithWhereUniqueWithoutUserInput: ['where', 'update', 'create'],
  UserAddressUpdateWithWhereUniqueWithoutUserInput: ['where', 'data'],
  UserAddressUpdateManyWithWhereWithoutUserInput: ['where', 'data'],
  UserAddressScalarWhereInput: ['AND', 'OR', 'NOT', 'id', 'userId', 'addressId', 'createdAt', 'updatedAt'],
  UserFileUpsertWithWhereUniqueWithoutUserInput: ['where', 'update', 'create'],
  UserFileUpdateWithWhereUniqueWithoutUserInput: ['where', 'data'],
  UserFileUpdateManyWithWhereWithoutUserInput: ['where', 'data'],
  UserFileScalarWhereInput: ['AND', 'OR', 'NOT', 'id', 'userId', 'fileId', 'createdAt', 'updatedAt'],
  ChatMessageUpsertWithWhereUniqueWithoutUserInput: ['where', 'update', 'create'],
  ChatMessageUpdateWithWhereUniqueWithoutUserInput: ['where', 'data'],
  ChatMessageUpdateManyWithWhereWithoutUserInput: ['where', 'data'],
  ChatMessageScalarWhereInput: ['AND', 'OR', 'NOT', 'id', 'message', 'createdAt', 'updatedAt', 'chatId', 'userId'],
  FileCreateWithoutFilesInput: ['location', 'type', 'createdAt', 'updatedAt', 'posts'],
  FileCreateOrConnectWithoutFilesInput: ['where', 'create'],
  UserCreateWithoutFilesInput: [
    'content',
    'babyBirth',
    'createdAt',
    'updatedAt',
    'email',
    'emailVerified',
    'image',
    'name',
    'username',
    'role',
    'accounts',
    'chats',
    'comments',
    'posts',
    'sessions',
    'addresses',
    'chatMessages',
  ],
  UserCreateOrConnectWithoutFilesInput: ['where', 'create'],
  FileUpsertWithoutFilesInput: ['update', 'create', 'where'],
  FileUpdateToOneWithWhereWithoutFilesInput: ['where', 'data'],
  FileUpdateWithoutFilesInput: ['location', 'type', 'createdAt', 'updatedAt', 'posts'],
  UserUpsertWithoutFilesInput: ['update', 'create', 'where'],
  UserUpdateToOneWithWhereWithoutFilesInput: ['where', 'data'],
  UserUpdateWithoutFilesInput: [
    'content',
    'babyBirth',
    'createdAt',
    'updatedAt',
    'email',
    'emailVerified',
    'image',
    'name',
    'username',
    'role',
    'accounts',
    'chats',
    'comments',
    'posts',
    'sessions',
    'addresses',
    'chatMessages',
  ],
  UserCreateWithoutAddressesInput: [
    'content',
    'babyBirth',
    'createdAt',
    'updatedAt',
    'email',
    'emailVerified',
    'image',
    'name',
    'username',
    'role',
    'accounts',
    'chats',
    'comments',
    'posts',
    'sessions',
    'files',
    'chatMessages',
  ],
  UserCreateOrConnectWithoutAddressesInput: ['where', 'create'],
  AddressUpdateToOneWithWhereWithoutUsersInput: ['where', 'data'],
  AddressUpdateWithoutUsersInput: ['code', 'c1', 'c2', 'c3', 'c4', 'createdAt', 'updatedAt', 'posts'],
  UserUpsertWithoutAddressesInput: ['update', 'create', 'where'],
  UserUpdateToOneWithWhereWithoutAddressesInput: ['where', 'data'],
  UserUpdateWithoutAddressesInput: [
    'content',
    'babyBirth',
    'createdAt',
    'updatedAt',
    'email',
    'emailVerified',
    'image',
    'name',
    'username',
    'role',
    'accounts',
    'chats',
    'comments',
    'posts',
    'sessions',
    'files',
    'chatMessages',
  ],
  CommentCreateWithoutPostInput: ['content', 'createdAt', 'updatedAt', 'user'],
  CommentCreateOrConnectWithoutPostInput: ['where', 'create'],
  CommentCreateManyPostInputEnvelope: ['data', 'skipDuplicates'],
  PostFileCreateWithoutPostInput: ['createdAt', 'updatedAt', 'file'],
  PostFileCreateOrConnectWithoutPostInput: ['where', 'create'],
  PostFileCreateManyPostInputEnvelope: ['data', 'skipDuplicates'],
  UserCreateWithoutPostsInput: [
    'content',
    'babyBirth',
    'createdAt',
    'updatedAt',
    'email',
    'emailVerified',
    'image',
    'name',
    'username',
    'role',
    'accounts',
    'chats',
    'comments',
    'sessions',
    'addresses',
    'files',
    'chatMessages',
  ],
  UserCreateOrConnectWithoutPostsInput: ['where', 'create'],
  CommentUpsertWithWhereUniqueWithoutPostInput: ['where', 'update', 'create'],
  CommentUpdateWithWhereUniqueWithoutPostInput: ['where', 'data'],
  CommentUpdateManyWithWhereWithoutPostInput: ['where', 'data'],
  PostFileUpsertWithWhereUniqueWithoutPostInput: ['where', 'update', 'create'],
  PostFileUpdateWithWhereUniqueWithoutPostInput: ['where', 'data'],
  PostFileUpdateManyWithWhereWithoutPostInput: ['where', 'data'],
  PostFileScalarWhereInput: ['AND', 'OR', 'NOT', 'id', 'postId', 'fileId', 'createdAt', 'updatedAt'],
  AddressUpdateToOneWithWhereWithoutPostsInput: ['where', 'data'],
  AddressUpdateWithoutPostsInput: ['code', 'c1', 'c2', 'c3', 'c4', 'createdAt', 'updatedAt', 'users'],
  UserUpsertWithoutPostsInput: ['update', 'create', 'where'],
  UserUpdateToOneWithWhereWithoutPostsInput: ['where', 'data'],
  UserUpdateWithoutPostsInput: [
    'content',
    'babyBirth',
    'createdAt',
    'updatedAt',
    'email',
    'emailVerified',
    'image',
    'name',
    'username',
    'role',
    'accounts',
    'chats',
    'comments',
    'sessions',
    'addresses',
    'files',
    'chatMessages',
  ],
  PostCreateWithoutCommentsInput: ['content', 'createdAt', 'updatedAt', 'files', 'address', 'user'],
  PostCreateOrConnectWithoutCommentsInput: ['where', 'create'],
  UserCreateWithoutCommentsInput: [
    'content',
    'babyBirth',
    'createdAt',
    'updatedAt',
    'email',
    'emailVerified',
    'image',
    'name',
    'username',
    'role',
    'accounts',
    'chats',
    'posts',
    'sessions',
    'addresses',
    'files',
    'chatMessages',
  ],
  UserCreateOrConnectWithoutCommentsInput: ['where', 'create'],
  PostUpsertWithoutCommentsInput: ['update', 'create', 'where'],
  PostUpdateToOneWithWhereWithoutCommentsInput: ['where', 'data'],
  PostUpdateWithoutCommentsInput: ['content', 'createdAt', 'updatedAt', 'files', 'address', 'user'],
  UserUpsertWithoutCommentsInput: ['update', 'create', 'where'],
  UserUpdateToOneWithWhereWithoutCommentsInput: ['where', 'data'],
  UserUpdateWithoutCommentsInput: [
    'content',
    'babyBirth',
    'createdAt',
    'updatedAt',
    'email',
    'emailVerified',
    'image',
    'name',
    'username',
    'role',
    'accounts',
    'chats',
    'posts',
    'sessions',
    'addresses',
    'files',
    'chatMessages',
  ],
  FileCreateWithoutPostsInput: ['location', 'type', 'createdAt', 'updatedAt', 'files'],
  FileCreateOrConnectWithoutPostsInput: ['where', 'create'],
  PostCreateWithoutFilesInput: ['content', 'createdAt', 'updatedAt', 'comments', 'address', 'user'],
  PostCreateOrConnectWithoutFilesInput: ['where', 'create'],
  FileUpsertWithoutPostsInput: ['update', 'create', 'where'],
  FileUpdateToOneWithWhereWithoutPostsInput: ['where', 'data'],
  FileUpdateWithoutPostsInput: ['location', 'type', 'createdAt', 'updatedAt', 'files'],
  PostUpsertWithoutFilesInput: ['update', 'create', 'where'],
  PostUpdateToOneWithWhereWithoutFilesInput: ['where', 'data'],
  PostUpdateWithoutFilesInput: ['content', 'createdAt', 'updatedAt', 'comments', 'address', 'user'],
  PostFileCreateWithoutFileInput: ['createdAt', 'updatedAt', 'post'],
  PostFileCreateOrConnectWithoutFileInput: ['where', 'create'],
  PostFileCreateManyFileInputEnvelope: ['data', 'skipDuplicates'],
  UserFileCreateWithoutFileInput: ['createdAt', 'updatedAt', 'user'],
  UserFileCreateOrConnectWithoutFileInput: ['where', 'create'],
  UserFileCreateManyFileInputEnvelope: ['data', 'skipDuplicates'],
  PostFileUpsertWithWhereUniqueWithoutFileInput: ['where', 'update', 'create'],
  PostFileUpdateWithWhereUniqueWithoutFileInput: ['where', 'data'],
  PostFileUpdateManyWithWhereWithoutFileInput: ['where', 'data'],
  UserFileUpsertWithWhereUniqueWithoutFileInput: ['where', 'update', 'create'],
  UserFileUpdateWithWhereUniqueWithoutFileInput: ['where', 'data'],
  UserFileUpdateManyWithWhereWithoutFileInput: ['where', 'data'],
  PostCreateWithoutAddressInput: ['content', 'createdAt', 'updatedAt', 'comments', 'files', 'user'],
  PostCreateOrConnectWithoutAddressInput: ['where', 'create'],
  PostUpsertWithWhereUniqueWithoutAddressInput: ['where', 'update', 'create'],
  PostCreateManyAddressInputEnvelope: ['data', 'skipDuplicates'],
  PostUpdateWithWhereUniqueWithoutAddressInput: ['where', 'data'],
  PostUpdateManyWithWhereWithoutAddressInput: ['where', 'data'],
  UserAddressCreateWithoutAddressInput: ['createdAt', 'updatedAt', 'user'],
  UserAddressCreateOrConnectWithoutAddressInput: ['where', 'create'],
  UserAddressUpsertWithWhereUniqueWithoutAddressInput: ['where', 'update', 'create'],
  UserAddressCreateManyAddressInputEnvelope: ['data', 'skipDuplicates'],
  UserAddressUpdateWithWhereUniqueWithoutAddressInput: ['where', 'data'],
  UserAddressUpdateManyWithWhereWithoutAddressInput: ['where', 'data'],
  ChatMessageCreateWithoutChatInput: ['message', 'createdAt', 'updatedAt', 'user'],
  ChatMessageCreateOrConnectWithoutChatInput: ['where', 'create'],
  ChatMessageCreateManyChatInputEnvelope: ['data', 'skipDuplicates'],
  ChatUserCreateWithoutChatInput: ['createdAt', 'updatedAt', 'user'],
  ChatUserCreateOrConnectWithoutChatInput: ['where', 'create'],
  ChatUserCreateManyChatInputEnvelope: ['data', 'skipDuplicates'],
  ChatMessageUpsertWithWhereUniqueWithoutChatInput: ['where', 'update', 'create'],
  ChatMessageUpdateWithWhereUniqueWithoutChatInput: ['where', 'data'],
  ChatMessageUpdateManyWithWhereWithoutChatInput: ['where', 'data'],
  ChatUserUpsertWithWhereUniqueWithoutChatInput: ['where', 'update', 'create'],
  ChatUserUpdateWithWhereUniqueWithoutChatInput: ['where', 'data'],
  ChatUserUpdateManyWithWhereWithoutChatInput: ['where', 'data'],
  ChatCreateWithoutUsersInput: ['name', 'createdAt', 'updatedAt', 'messages'],
  ChatCreateOrConnectWithoutUsersInput: ['where', 'create'],
  UserCreateWithoutChatsInput: [
    'content',
    'babyBirth',
    'createdAt',
    'updatedAt',
    'email',
    'emailVerified',
    'image',
    'name',
    'username',
    'role',
    'accounts',
    'comments',
    'posts',
    'sessions',
    'addresses',
    'files',
    'chatMessages',
  ],
  UserCreateOrConnectWithoutChatsInput: ['where', 'create'],
  ChatUpsertWithoutUsersInput: ['update', 'create', 'where'],
  ChatUpdateToOneWithWhereWithoutUsersInput: ['where', 'data'],
  ChatUpdateWithoutUsersInput: ['name', 'createdAt', 'updatedAt', 'messages'],
  UserUpsertWithoutChatsInput: ['update', 'create', 'where'],
  UserUpdateToOneWithWhereWithoutChatsInput: ['where', 'data'],
  UserUpdateWithoutChatsInput: [
    'content',
    'babyBirth',
    'createdAt',
    'updatedAt',
    'email',
    'emailVerified',
    'image',
    'name',
    'username',
    'role',
    'accounts',
    'comments',
    'posts',
    'sessions',
    'addresses',
    'files',
    'chatMessages',
  ],
  UserCreateWithoutChatMessagesInput: [
    'content',
    'babyBirth',
    'createdAt',
    'updatedAt',
    'email',
    'emailVerified',
    'image',
    'name',
    'username',
    'role',
    'accounts',
    'chats',
    'comments',
    'posts',
    'sessions',
    'addresses',
    'files',
  ],
  UserCreateOrConnectWithoutChatMessagesInput: ['where', 'create'],
  ChatCreateWithoutMessagesInput: ['name', 'createdAt', 'updatedAt', 'users'],
  ChatCreateOrConnectWithoutMessagesInput: ['where', 'create'],
  UserUpsertWithoutChatMessagesInput: ['update', 'create', 'where'],
  UserUpdateToOneWithWhereWithoutChatMessagesInput: ['where', 'data'],
  UserUpdateWithoutChatMessagesInput: [
    'content',
    'babyBirth',
    'createdAt',
    'updatedAt',
    'email',
    'emailVerified',
    'image',
    'name',
    'username',
    'role',
    'accounts',
    'chats',
    'comments',
    'posts',
    'sessions',
    'addresses',
    'files',
  ],
  ChatUpsertWithoutMessagesInput: ['update', 'create', 'where'],
  ChatUpdateToOneWithWhereWithoutMessagesInput: ['where', 'data'],
  ChatUpdateWithoutMessagesInput: ['name', 'createdAt', 'updatedAt', 'users'],
  UserCreateWithoutAccountsInput: [
    'content',
    'babyBirth',
    'createdAt',
    'updatedAt',
    'email',
    'emailVerified',
    'image',
    'name',
    'username',
    'role',
    'chats',
    'comments',
    'posts',
    'sessions',
    'addresses',
    'files',
    'chatMessages',
  ],
  UserCreateOrConnectWithoutAccountsInput: ['where', 'create'],
  UserUpsertWithoutAccountsInput: ['update', 'create', 'where'],
  UserUpdateToOneWithWhereWithoutAccountsInput: ['where', 'data'],
  UserUpdateWithoutAccountsInput: [
    'content',
    'babyBirth',
    'createdAt',
    'updatedAt',
    'email',
    'emailVerified',
    'image',
    'name',
    'username',
    'role',
    'chats',
    'comments',
    'posts',
    'sessions',
    'addresses',
    'files',
    'chatMessages',
  ],
  UserCreateWithoutSessionsInput: [
    'content',
    'babyBirth',
    'createdAt',
    'updatedAt',
    'email',
    'emailVerified',
    'image',
    'name',
    'username',
    'role',
    'accounts',
    'chats',
    'comments',
    'posts',
    'addresses',
    'files',
    'chatMessages',
  ],
  UserCreateOrConnectWithoutSessionsInput: ['where', 'create'],
  UserUpsertWithoutSessionsInput: ['update', 'create', 'where'],
  UserUpdateToOneWithWhereWithoutSessionsInput: ['where', 'data'],
  UserUpdateWithoutSessionsInput: [
    'content',
    'babyBirth',
    'createdAt',
    'updatedAt',
    'email',
    'emailVerified',
    'image',
    'name',
    'username',
    'role',
    'accounts',
    'chats',
    'comments',
    'posts',
    'addresses',
    'files',
    'chatMessages',
  ],
  AccountCreateManyUserInput: [
    'type',
    'provider',
    'providerAccountId',
    'refresh_token',
    'access_token',
    'expires_at',
    'token_type',
    'scope',
    'id_token',
    'session_state',
    'createdAt',
    'updatedAt',
  ],
  ChatUserCreateManyUserInput: ['id', 'createdAt', 'updatedAt', 'chatId'],
  CommentCreateManyUserInput: ['id', 'content', 'createdAt', 'updatedAt', 'postId'],
  PostCreateManyUserInput: ['id', 'content', 'addressId', 'createdAt', 'updatedAt'],
  SessionCreateManyUserInput: ['sessionToken', 'expires', 'createdAt', 'updatedAt'],
  UserAddressCreateManyUserInput: ['id', 'addressId', 'createdAt', 'updatedAt'],
  UserFileCreateManyUserInput: ['id', 'fileId', 'createdAt', 'updatedAt'],
  ChatMessageCreateManyUserInput: ['id', 'message', 'createdAt', 'updatedAt', 'chatId'],
  AccountUpdateWithoutUserInput: [
    'type',
    'provider',
    'providerAccountId',
    'refresh_token',
    'access_token',
    'expires_at',
    'token_type',
    'scope',
    'id_token',
    'session_state',
    'createdAt',
    'updatedAt',
  ],
  ChatUserUpdateWithoutUserInput: ['createdAt', 'updatedAt', 'chat'],
  CommentUpdateWithoutUserInput: ['content', 'createdAt', 'updatedAt', 'post'],
  PostUpdateWithoutUserInput: ['content', 'createdAt', 'updatedAt', 'comments', 'files', 'address'],
  SessionUpdateWithoutUserInput: ['sessionToken', 'expires', 'createdAt', 'updatedAt'],
  UserAddressUpdateWithoutUserInput: ['createdAt', 'updatedAt', 'address'],
  UserFileUpdateWithoutUserInput: ['createdAt', 'updatedAt', 'file'],
  ChatMessageUpdateWithoutUserInput: ['message', 'createdAt', 'updatedAt', 'chat'],
  CommentCreateManyPostInput: ['id', 'content', 'createdAt', 'updatedAt', 'userId'],
  PostFileCreateManyPostInput: ['id', 'fileId', 'createdAt', 'updatedAt'],
  CommentUpdateWithoutPostInput: ['content', 'createdAt', 'updatedAt', 'user'],
  PostFileUpdateWithoutPostInput: ['createdAt', 'updatedAt', 'file'],
  PostFileCreateManyFileInput: ['id', 'postId', 'createdAt', 'updatedAt'],
  UserFileCreateManyFileInput: ['id', 'userId', 'createdAt', 'updatedAt'],
  PostFileUpdateWithoutFileInput: ['createdAt', 'updatedAt', 'post'],
  UserFileUpdateWithoutFileInput: ['createdAt', 'updatedAt', 'user'],
  PostUpdateWithoutAddressInput: ['content', 'createdAt', 'updatedAt', 'comments', 'files', 'user'],
  PostCreateManyAddressInput: ['id', 'content', 'createdAt', 'updatedAt', 'userId'],
  UserAddressUpdateWithoutAddressInput: ['createdAt', 'updatedAt', 'user'],
  UserAddressCreateManyAddressInput: ['id', 'userId', 'createdAt', 'updatedAt'],
  ChatMessageCreateManyChatInput: ['id', 'message', 'createdAt', 'updatedAt', 'userId'],
  ChatUserCreateManyChatInput: ['id', 'createdAt', 'updatedAt', 'userId'],
  ChatMessageUpdateWithoutChatInput: ['message', 'createdAt', 'updatedAt', 'user'],
  ChatUserUpdateWithoutChatInput: ['createdAt', 'updatedAt', 'user'],
};

type InputTypesNames = keyof typeof inputTypes;

type InputTypeFieldNames<TInput extends InputTypesNames> = Exclude<
  keyof (typeof inputTypes)[TInput]['prototype'],
  number | symbol
>;

type InputTypeFieldsConfig<TInput extends InputTypesNames> = FieldsConfig<InputTypeFieldNames<TInput>>;

export type InputTypeConfig<TInput extends InputTypesNames> = {
  class?: ClassDecorator[];
  fields?: InputTypeFieldsConfig<TInput>;
};

export type InputTypesEnhanceMap = {
  [TInput in InputTypesNames]?: InputTypeConfig<TInput>;
};

export function applyInputTypesEnhanceMap(inputTypesEnhanceMap: InputTypesEnhanceMap) {
  for (const inputTypeEnhanceMapKey of Object.keys(inputTypesEnhanceMap)) {
    const inputTypeName = inputTypeEnhanceMapKey as keyof typeof inputTypesEnhanceMap;
    const typeConfig = inputTypesEnhanceMap[inputTypeName]!;
    const typeClass = inputTypes[inputTypeName];
    const typeTarget = typeClass.prototype;
    applyTypeClassEnhanceConfig(
      typeConfig,
      typeClass,
      typeTarget,
      inputsInfo[inputTypeName as keyof typeof inputsInfo]
    );
  }
}
